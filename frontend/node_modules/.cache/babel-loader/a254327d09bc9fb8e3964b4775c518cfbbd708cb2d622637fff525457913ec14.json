{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nexport default function useKrakenTop20() {\n  _s();\n  const [cryptos, setCryptos] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        // Взимаме топ 20 криптовалути директно от CoinGecko (в USD)\n        const res = await fetch(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=volume_desc&per_page=20&page=1&sparkline=false\");\n        const data = await res.json();\n\n        // Мапваме към формата, който ни трябва\n        const mapped = data.map(c => ({\n          symbol: c.symbol.toUpperCase() + \"/USD\",\n          // напр. BTC/USD\n          name: c.name,\n          // Bitcoin\n          logo: c.image,\n          // линк към логото\n          price: c.current_price // текущата цена от CoinGecko\n        }));\n        setCryptos(mapped);\n      } catch (err) {\n        console.error(\"Error fetching top 20 cryptos:\", err);\n      }\n    }\n    fetchData();\n  }, []);\n  return cryptos;\n}\n_s(useKrakenTop20, \"EQJvBb3StcVAt/RsPLmS7z4HOdE=\");","map":{"version":3,"names":["useEffect","useState","useKrakenTop20","_s","cryptos","setCryptos","fetchData","res","fetch","data","json","mapped","map","c","symbol","toUpperCase","name","logo","image","price","current_price","err","console","error"],"sources":["C:/Users/User/Documents/Trading212/TradingSimulation/frontend/src/Cryptos/KrakenApi.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport default function useKrakenTop20() {\r\n    const [cryptos, setCryptos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                // Взимаме топ 20 криптовалути директно от CoinGecko (в USD)\r\n                const res = await fetch(\r\n                    \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=volume_desc&per_page=20&page=1&sparkline=false\"\r\n                );\r\n                const data = await res.json();\r\n\r\n                // Мапваме към формата, който ни трябва\r\n                const mapped = data.map(c => ({\r\n                    symbol: c.symbol.toUpperCase() + \"/USD\", // напр. BTC/USD\r\n                    name: c.name, // Bitcoin\r\n                    logo: c.image, // линк към логото\r\n                    price: c.current_price // текущата цена от CoinGecko\r\n                }));\r\n\r\n                setCryptos(mapped);\r\n            } catch (err) {\r\n                console.error(\"Error fetching top 20 cryptos:\", err);\r\n            }\r\n        }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    return cryptos;\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACZ,eAAeM,SAASA,CAAA,EAAG;MACvB,IAAI;QACA;QACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CACnB,qHACJ,CAAC;QACD,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;;QAE7B;QACA,MAAMC,MAAM,GAAGF,IAAI,CAACG,GAAG,CAACC,CAAC,KAAK;UAC1BC,MAAM,EAAED,CAAC,CAACC,MAAM,CAACC,WAAW,CAAC,CAAC,GAAG,MAAM;UAAE;UACzCC,IAAI,EAAEH,CAAC,CAACG,IAAI;UAAE;UACdC,IAAI,EAAEJ,CAAC,CAACK,KAAK;UAAE;UACfC,KAAK,EAAEN,CAAC,CAACO,aAAa,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEHf,UAAU,CAACM,MAAM,CAAC;MACtB,CAAC,CAAC,OAAOU,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEF,GAAG,CAAC;MACxD;IACJ;IAEAf,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOF,OAAO;AAClB;AAACD,EAAA,CA9BuBD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}