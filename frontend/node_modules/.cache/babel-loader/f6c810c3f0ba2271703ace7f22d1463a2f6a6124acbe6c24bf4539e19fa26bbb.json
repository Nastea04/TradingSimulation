{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Trading212\\\\TradingSimulation\\\\frontend\\\\src\\\\Cryptos\\\\TestKraken.js\",\n  _s = $RefreshSig$();\n// TestKraken.js\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TestKraken() {\n  _s();\n  useEffect(() => {\n    const ws = new WebSocket(\"wss://ws.kraken.com/v2\");\n    ws.onopen = () => {\n      console.log(\"✅ Connected to Kraken v2\");\n\n      // Използваме точно wsname от AssetPairs\n      ws.send(JSON.stringify({\n        method: \"subscribe\",\n        params: {\n          channel: \"ticker\",\n          symbol: [\"BTC/USD\", \"MATIC/USD\"] // тук са точните имена\n        }\n      }));\n    };\n    ws.onmessage = event => {\n      const msg = JSON.parse(event.data);\n      console.log(\"📩 RAW:\", msg);\n\n      // Показваме цена при update\n      if (msg.channel === \"ticker\" && msg.type === \"snapshot\") {\n        console.log(`💰 ${msg.data[0].symbol}: ${msg.data[0].last}`);\n      }\n      if (msg.channel === \"ticker\" && msg.type === \"update\") {\n        console.log(`🔄 ${msg.data[0].symbol}: ${msg.data[0].last}`);\n      }\n    };\n    ws.onclose = () => {\n      console.log(\"❌ Disconnected from Kraken v2\");\n    };\n    return () => ws.close();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Check console for BTC/USD and MATIC/USD prices...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, this);\n}\n_s(TestKraken, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = TestKraken;\nvar _c;\n$RefreshReg$(_c, \"TestKraken\");","map":{"version":3,"names":["useEffect","jsxDEV","_jsxDEV","TestKraken","_s","ws","WebSocket","onopen","console","log","send","JSON","stringify","method","params","channel","symbol","onmessage","event","msg","parse","data","type","last","onclose","close","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/Trading212/TradingSimulation/frontend/src/Cryptos/TestKraken.js"],"sourcesContent":["// TestKraken.js\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function TestKraken() {\r\n    useEffect(() => {\r\n        const ws = new WebSocket(\"wss://ws.kraken.com/v2\");\r\n\r\n        ws.onopen = () => {\r\n            console.log(\"✅ Connected to Kraken v2\");\r\n\r\n            // Използваме точно wsname от AssetPairs\r\n            ws.send(JSON.stringify({\r\n                method: \"subscribe\",\r\n                params: {\r\n                    channel: \"ticker\",\r\n                    symbol: [\"BTC/USD\", \"MATIC/USD\"] // тук са точните имена\r\n                }\r\n            }));\r\n        };\r\n\r\n        ws.onmessage = (event) => {\r\n            const msg = JSON.parse(event.data);\r\n            console.log(\"📩 RAW:\", msg);\r\n\r\n            // Показваме цена при update\r\n            if (msg.channel === \"ticker\" && msg.type === \"snapshot\") {\r\n                console.log(`💰 ${msg.data[0].symbol}: ${msg.data[0].last}`);\r\n            }\r\n            if (msg.channel === \"ticker\" && msg.type === \"update\") {\r\n                console.log(`🔄 ${msg.data[0].symbol}: ${msg.data[0].last}`);\r\n            }\r\n        };\r\n\r\n        ws.onclose = () => {\r\n            console.log(\"❌ Disconnected from Kraken v2\");\r\n        };\r\n\r\n        return () => ws.close();\r\n    }, []);\r\n\r\n    return <div>Check console for BTC/USD and MATIC/USD prices...</div>;\r\n}\r\n"],"mappings":";;AAAA;AACA,SAASA,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACjCJ,SAAS,CAAC,MAAM;IACZ,MAAMK,EAAE,GAAG,IAAIC,SAAS,CAAC,wBAAwB,CAAC;IAElDD,EAAE,CAACE,MAAM,GAAG,MAAM;MACdC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;;MAEvC;MACAJ,EAAE,CAACK,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;QACnBC,MAAM,EAAE,WAAW;QACnBC,MAAM,EAAE;UACJC,OAAO,EAAE,QAAQ;UACjBC,MAAM,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;QACrC;MACJ,CAAC,CAAC,CAAC;IACP,CAAC;IAEDX,EAAE,CAACY,SAAS,GAAIC,KAAK,IAAK;MACtB,MAAMC,GAAG,GAAGR,IAAI,CAACS,KAAK,CAACF,KAAK,CAACG,IAAI,CAAC;MAClCb,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEU,GAAG,CAAC;;MAE3B;MACA,IAAIA,GAAG,CAACJ,OAAO,KAAK,QAAQ,IAAII,GAAG,CAACG,IAAI,KAAK,UAAU,EAAE;QACrDd,OAAO,CAACC,GAAG,CAAC,MAAMU,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC,CAACL,MAAM,KAAKG,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC,CAACE,IAAI,EAAE,CAAC;MAChE;MACA,IAAIJ,GAAG,CAACJ,OAAO,KAAK,QAAQ,IAAII,GAAG,CAACG,IAAI,KAAK,QAAQ,EAAE;QACnDd,OAAO,CAACC,GAAG,CAAC,MAAMU,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC,CAACL,MAAM,KAAKG,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC,CAACE,IAAI,EAAE,CAAC;MAChE;IACJ,CAAC;IAEDlB,EAAE,CAACmB,OAAO,GAAG,MAAM;MACfhB,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAChD,CAAC;IAED,OAAO,MAAMJ,EAAE,CAACoB,KAAK,CAAC,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOvB,OAAA;IAAAwB,QAAA,EAAK;EAAiD;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACvE;AAAC1B,EAAA,CAtCuBD,UAAU;AAAA4B,EAAA,GAAV5B,UAAU;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}