{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nexport default function useKrakenPrices2(pairs) {\n  _s();\n  const [prices, setPrices] = useState({});\n  const startHeartbeat = (ws, intervalMs = 15000) => {\n    return setInterval(() => {\n      if (ws.readyState === WebSocket.OPEN) {\n        ws.send(JSON.stringify({\n          method: \"ping\"\n        }));\n        // console.log(\"ðŸ“¡ Ping sent\");\n      }\n    }, intervalMs);\n  };\n  const stopHeartbeat = intervalId => {\n    clearInterval(intervalId);\n  };\n  useEffect(() => {\n    const ws = new WebSocket(\"wss://ws.kraken.com/v2\");\n    ws.onopen = () => {\n      ws.send(JSON.stringify({\n        method: \"subscribe\",\n        params: {\n          channel: \"ticker\",\n          symbol: pairs\n        }\n      }));\n      const heartbeatId = startHeartbeat(ws, 15000);\n    };\n    ws.onmessage = event => {\n      try {\n        const msg = JSON.parse(event.data);\n        console.log(\"ðŸ“©\", event.data);\n        if (msg.channel === \"ticker\" && (msg.type === \"snapshot\" || msg.type === \"update\")) {\n          msg.data.forEach(ticker => {\n            setPrices(prev => ({\n              ...prev,\n              [ticker.symbol]: ticker.last\n            }));\n          });\n        }\n      } catch (err) {\n        console.error(\"Error:\", err);\n      }\n    };\n    ws.onclose = () => {\n      stopHeartbeat(heartbeatId);\n    };\n    return () => ws.close();\n  }, [pairs]);\n  return prices;\n}\n_s(useKrakenPrices2, \"AyDZng7+aEBipOGwqaguTBzobZI=\");","map":{"version":3,"names":["useEffect","useState","useKrakenPrices2","pairs","_s","prices","setPrices","startHeartbeat","ws","intervalMs","setInterval","readyState","WebSocket","OPEN","send","JSON","stringify","method","stopHeartbeat","intervalId","clearInterval","onopen","params","channel","symbol","heartbeatId","onmessage","event","msg","parse","data","console","log","type","forEach","ticker","prev","last","err","error","onclose","close"],"sources":["C:/Users/User/Documents/Trading212/TradingSimulation/frontend/src/Cryptos/KrakenApi.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport default function useKrakenPrices2(pairs) {\r\n    const [prices, setPrices] = useState({});\r\n\r\n    const startHeartbeat = (ws, intervalMs = 15000) => {\r\n        return setInterval(() => {\r\n            if (ws.readyState === WebSocket.OPEN) {\r\n                ws.send(JSON.stringify({ method: \"ping\" }));\r\n                // console.log(\"ðŸ“¡ Ping sent\");\r\n            }\r\n        }, intervalMs);\r\n    }\r\n    const stopHeartbeat = (intervalId) => {\r\n        clearInterval(intervalId);\r\n    }\r\n    useEffect(() => {\r\n        const ws = new WebSocket(\"wss://ws.kraken.com/v2\");\r\n\r\n        ws.onopen = () => {\r\n            ws.send(JSON.stringify({\r\n                method: \"subscribe\",\r\n                params: {\r\n                    channel: \"ticker\",\r\n                    symbol: pairs\r\n                }\r\n            }));\r\n            const heartbeatId = startHeartbeat(ws, 15000);\r\n        };\r\n\r\n        ws.onmessage = (event) => {\r\n\r\n            try {\r\n                const msg = JSON.parse(event.data);\r\n                console.log(\"ðŸ“©\", event.data);\r\n                if (msg.channel === \"ticker\" && (msg.type === \"snapshot\" || msg.type === \"update\")) {\r\n                    msg.data.forEach(ticker => {\r\n                        setPrices(prev => ({\r\n                            ...prev,\r\n                            [ticker.symbol]: ticker.last\r\n                        }));\r\n                    });\r\n                }\r\n\r\n            } catch (err) {\r\n                console.error(\"Error:\", err);\r\n            }\r\n        };\r\n        ws.onclose = () => {\r\n            stopHeartbeat(heartbeatId);\r\n        }\r\n        return () => ws.close();\r\n    }, [pairs]);\r\n\r\n    return prices;\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,eAAe,SAASC,gBAAgBA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC5C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExC,MAAMM,cAAc,GAAGA,CAACC,EAAE,EAAEC,UAAU,GAAG,KAAK,KAAK;IAC/C,OAAOC,WAAW,CAAC,MAAM;MACrB,IAAIF,EAAE,CAACG,UAAU,KAAKC,SAAS,CAACC,IAAI,EAAE;QAClCL,EAAE,CAACM,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;UAAEC,MAAM,EAAE;QAAO,CAAC,CAAC,CAAC;QAC3C;MACJ;IACJ,CAAC,EAAER,UAAU,CAAC;EAClB,CAAC;EACD,MAAMS,aAAa,GAAIC,UAAU,IAAK;IAClCC,aAAa,CAACD,UAAU,CAAC;EAC7B,CAAC;EACDnB,SAAS,CAAC,MAAM;IACZ,MAAMQ,EAAE,GAAG,IAAII,SAAS,CAAC,wBAAwB,CAAC;IAElDJ,EAAE,CAACa,MAAM,GAAG,MAAM;MACdb,EAAE,CAACM,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;QACnBC,MAAM,EAAE,WAAW;QACnBK,MAAM,EAAE;UACJC,OAAO,EAAE,QAAQ;UACjBC,MAAM,EAAErB;QACZ;MACJ,CAAC,CAAC,CAAC;MACH,MAAMsB,WAAW,GAAGlB,cAAc,CAACC,EAAE,EAAE,KAAK,CAAC;IACjD,CAAC;IAEDA,EAAE,CAACkB,SAAS,GAAIC,KAAK,IAAK;MAEtB,IAAI;QACA,MAAMC,GAAG,GAAGb,IAAI,CAACc,KAAK,CAACF,KAAK,CAACG,IAAI,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,IAAI,EAAEL,KAAK,CAACG,IAAI,CAAC;QAC7B,IAAIF,GAAG,CAACL,OAAO,KAAK,QAAQ,KAAKK,GAAG,CAACK,IAAI,KAAK,UAAU,IAAIL,GAAG,CAACK,IAAI,KAAK,QAAQ,CAAC,EAAE;UAChFL,GAAG,CAACE,IAAI,CAACI,OAAO,CAACC,MAAM,IAAI;YACvB7B,SAAS,CAAC8B,IAAI,KAAK;cACf,GAAGA,IAAI;cACP,CAACD,MAAM,CAACX,MAAM,GAAGW,MAAM,CAACE;YAC5B,CAAC,CAAC,CAAC;UACP,CAAC,CAAC;QACN;MAEJ,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVP,OAAO,CAACQ,KAAK,CAAC,QAAQ,EAAED,GAAG,CAAC;MAChC;IACJ,CAAC;IACD9B,EAAE,CAACgC,OAAO,GAAG,MAAM;MACftB,aAAa,CAACO,WAAW,CAAC;IAC9B,CAAC;IACD,OAAO,MAAMjB,EAAE,CAACiC,KAAK,CAAC,CAAC;EAC3B,CAAC,EAAE,CAACtC,KAAK,CAAC,CAAC;EAEX,OAAOE,MAAM;AACjB;AAACD,EAAA,CArDuBF,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}