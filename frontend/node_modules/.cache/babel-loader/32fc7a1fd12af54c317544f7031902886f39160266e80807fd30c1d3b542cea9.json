{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Trading212\\\\TradingSimulation\\\\frontend\\\\src\\\\OtherPages\\\\CryptoTable.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport useKrakenPrices from \"../Cryptos/KrakenApi\";\nimport useKrakenPricesRest from \"../Cryptos/KrakenApiBugSolve\";\nimport \"./styleTable.css\";\nimport \"./formSellBuy.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CryptoTable = () => {\n  _s();\n  const [cryptos, setCryptos] = useState([]);\n  const [isBuyOpen, setIsBuyOpen] = useState(false);\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const [balance, setBalance] = useState((user === null || user === void 0 ? void 0 : user.balance) || 0);\n  const [selectedCrypto, setSelectedCrypto] = useState(null);\n  const [buyQuantity, setBuyQuantity] = useState(\"\");\n  const [totalBuy, setTotalBuy] = useState(0);\n  const prices = useKrakenPricesRest(cryptos.map(c => c.symbol));\n  //const prices = useKrakenPrices(cryptos.map(c => c.symbol));\n\n  const openBuyForm = crypto => {\n    setSelectedCrypto(crypto);\n    setIsBuyOpen(true);\n  };\n  const closeBuyForm = () => {\n    setSelectedCrypto(null);\n    setIsBuyOpen(false);\n    setBuyQuantity(\"\");\n    setTotalBuy(0);\n  };\n  const fetchBalance = () => {\n    if (!user || !user.id) return;\n    fetch(`http://localhost:8080/api/users/get/${user.id}`).then(res => res.json()).then(data => setBalance(data.balance)).catch(err => console.error(\"Error fetching balance:\", err));\n  };\n  const fetchData = () => {\n    fetchBalance();\n    fetch(`http://localhost:8080/api/cryptos`).then(res => res.json()).then(data => setCryptos(data)).catch(err => console.error(\"Error fetching cryptos:\", err));\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const makeBuy = () => {\n    const qty = parseFloat(buyQuantity);\n    if (isNaN(qty) || qty <= 0) {\n      alert(\"Enter quantity\");\n      return;\n    }\n    if (!prices[selectedCrypto.symbol]) {\n      alert(\"No price available! Try again later.\");\n      return;\n    }\n    const symbol = encodeURIComponent(selectedCrypto.cryptoSymbol);\n    fetch(`http://localhost:8080/api/trade/buy/${user.id}?cryptoSymbol=${symbol}&quantity=${qty}&price=${prices[selectedCrypto.symbol]}&cryptoName=${selectedCrypto.name}`, {\n      method: \"POST\"\n    }).then(async res => {\n      const message = await res.text();\n      if (!res.ok) {\n        throw new Error(message);\n      }\n      return message;\n    }).then(msg => {\n      alert(msg);\n      fetchData();\n      closeBuyForm();\n      fetchBalance();\n    }).catch(err => {\n      alert(err.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"id\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"logo\",\n            children: \"Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"symbol\",\n            children: \"Symbol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"price\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"buy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: cryptos.map(coin => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"id\",\n            children: coin.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"logo\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: coin.url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"symbol\",\n            children: coin.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"name\",\n            children: coin.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"price\",\n            children: prices[coin.symbol] ? `$${prices[coin.symbol]}` : \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this), user !== null ? /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"buy\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => openBuyForm(coin),\n              children: \"Buy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 69\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 49\n          }, this) : /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 131\n          }, this)]\n        }, coin.symbol, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), isBuyOpen === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Sell \", selectedCrypto.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Symbol: \", selectedCrypto.symbol]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Available: \", selectedCrypto.quantity.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: \", prices[selectedCrypto.symbol]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total: \", totalBuy.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0\",\n          step: \"0.01\",\n          max: selectedCrypto.quantity,\n          placeholder: \"Quantity to buy\",\n          onChange: e => {\n            const value = e.target.value;\n            setBuyQuantity(value);\n            const qty = parseFloat(value);\n            const price = prices[selectedCrypto.cryptoSymbol];\n            if (!isNaN(qty) && qty > 0 && price) {\n              setTotalBuy(qty * price);\n            } else {\n              setTotalBuy(0);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"confirm\",\n            onClick: () => makeBuy(),\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel\",\n            onClick: () => closeBuyForm(),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_s(CryptoTable, \"9ugg/1q/dLS6r3ABiGMdoh+vz6I=\", false, function () {\n  return [useKrakenPricesRest];\n});\n_c = CryptoTable;\nexport default CryptoTable;\nvar _c;\n$RefreshReg$(_c, \"CryptoTable\");","map":{"version":3,"names":["useEffect","useState","useKrakenPrices","useKrakenPricesRest","jsxDEV","_jsxDEV","Fragment","_Fragment","CryptoTable","_s","cryptos","setCryptos","isBuyOpen","setIsBuyOpen","user","JSON","parse","localStorage","getItem","balance","setBalance","selectedCrypto","setSelectedCrypto","buyQuantity","setBuyQuantity","totalBuy","setTotalBuy","prices","map","c","symbol","openBuyForm","crypto","closeBuyForm","fetchBalance","id","fetch","then","res","json","data","catch","err","console","error","fetchData","makeBuy","qty","parseFloat","isNaN","alert","encodeURIComponent","cryptoSymbol","name","method","message","text","ok","Error","msg","children","className","fileName","_jsxFileName","lineNumber","columnNumber","coin","src","url","onClick","quantity","toFixed","type","min","step","max","placeholder","onChange","e","value","target","price","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/Trading212/TradingSimulation/frontend/src/OtherPages/CryptoTable.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport useKrakenPrices from \"../Cryptos/KrakenApi\";\r\nimport useKrakenPricesRest from \"../Cryptos/KrakenApiBugSolve\";\r\nimport \"./styleTable.css\"\r\nimport \"./formSellBuy.css\"\r\n\r\nconst CryptoTable = () => {\r\n    const [cryptos, setCryptos] = useState([]);\r\n    const [isBuyOpen, setIsBuyOpen] = useState(false);\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    const [balance, setBalance] = useState(user?.balance || 0);\r\n    const [selectedCrypto, setSelectedCrypto] = useState(null);\r\n    const [buyQuantity, setBuyQuantity] = useState(\"\");\r\n    const [totalBuy, setTotalBuy] = useState(0);\r\n    const prices = useKrakenPricesRest(cryptos.map(c => c.symbol));\r\n    //const prices = useKrakenPrices(cryptos.map(c => c.symbol));\r\n\r\n    const openBuyForm = (crypto) => {\r\n        setSelectedCrypto(crypto);\r\n        setIsBuyOpen(true);\r\n    }\r\n    const closeBuyForm = () => {\r\n        setSelectedCrypto(null);\r\n        setIsBuyOpen(false);\r\n        setBuyQuantity(\"\");\r\n        setTotalBuy(0);\r\n    }\r\n\r\n    const fetchBalance = () => {\r\n        if (!user || !user.id) return;\r\n        fetch(`http://localhost:8080/api/users/get/${user.id}`)\r\n            .then(res => res.json())\r\n            .then(data => setBalance(data.balance))\r\n            .catch(err => console.error(\"Error fetching balance:\", err));\r\n    };\r\n\r\n    const fetchData = () => {\r\n        fetchBalance();\r\n        fetch(`http://localhost:8080/api/cryptos`)\r\n            .then(res => res.json())\r\n            .then(data => setCryptos(data))\r\n            .catch(err => console.error(\"Error fetching cryptos:\", err));\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    const makeBuy = () => {\r\n        const qty = parseFloat(buyQuantity);\r\n        if (isNaN(qty) || qty <= 0) {\r\n            alert(\"Enter quantity\");\r\n            return;\r\n        }\r\n\r\n        if (!prices[selectedCrypto.symbol]) {\r\n            alert(\"No price available! Try again later.\");\r\n            return;\r\n        }\r\n\r\n        const symbol = encodeURIComponent(selectedCrypto.cryptoSymbol);\r\n        fetch(`http://localhost:8080/api/trade/buy/${user.id}?cryptoSymbol=${symbol}&quantity=${qty}&price=${prices[selectedCrypto.symbol]}&cryptoName=${selectedCrypto.name}`, {\r\n            method: \"POST\"\r\n        })\r\n\r\n            .then(async (res) => {\r\n                const message = await res.text();\r\n                if (!res.ok) {\r\n                    throw new Error(message);\r\n                }\r\n                return message;\r\n            })\r\n            .then((msg) => {\r\n                alert(msg);\r\n                fetchData();\r\n                closeBuyForm();\r\n                fetchBalance();\r\n            })\r\n            .catch((err) => {\r\n                alert(err.message);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"id\">#</th>\r\n                        <th className=\"logo\">Logo</th>\r\n                        <th className=\"symbol\">Symbol</th>\r\n                        <th className=\"name\">Name</th>\r\n                        <th className=\"price\">Price</th>\r\n                        <th className=\"buy\"></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {cryptos.map(coin => (\r\n                        <tr key={coin.symbol}>\r\n                            <td className=\"id\">{coin.id}</td>\r\n                            <td className=\"logo\"><img src={coin.url} /></td>\r\n                            <td className=\"symbol\">{coin.symbol}</td>\r\n                            <td className=\"name\">{coin.name}</td>\r\n                            <td className=\"price\">{prices[coin.symbol] ? `$${prices[coin.symbol]}` : \"Loading...\"}</td>\r\n                            {\r\n                                user !== null ? <td className=\"buy\"><button onClick={() => openBuyForm(coin)}>Buy</button></td> : <td></td>\r\n                            }\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            {isBuyOpen === true ?\r\n\r\n                <div className=\"overlay\">\r\n                    <div className=\"form-container\">\r\n                        <h1>Sell {selectedCrypto.name}</h1>\r\n                        <p>Symbol: {selectedCrypto.symbol}</p>\r\n                        <p>Available: {selectedCrypto.quantity.toFixed(2)}</p>\r\n                        <p>Price: {prices[selectedCrypto.symbol]}</p>\r\n                        <p>Total: {totalBuy.toFixed(2)}</p>\r\n                        <input type=\"number\" min=\"0\" step=\"0.01\" max={selectedCrypto.quantity}\r\n                            placeholder=\"Quantity to buy\" onChange={(e) => {\r\n                                const value = e.target.value;\r\n                                setBuyQuantity(value);\r\n\r\n                                const qty = parseFloat(value);\r\n                                const price = prices[selectedCrypto.cryptoSymbol];\r\n                                if (!isNaN(qty) && qty > 0 && price) {\r\n                                    setTotalBuy(qty * price);\r\n                                } else {\r\n                                    setTotalBuy(0);\r\n                                }\r\n                            }} />\r\n\r\n                        <div className=\"buttons\">\r\n                            <button className=\"confirm\" onClick={() => makeBuy()}>Confirm</button>\r\n                            <button className=\"cancel\" onClick={() => closeBuyForm()}>Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                </div> : <></>};\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CryptoTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}