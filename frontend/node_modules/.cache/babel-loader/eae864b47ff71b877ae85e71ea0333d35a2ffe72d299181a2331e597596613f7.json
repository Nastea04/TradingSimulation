{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nexport default function useKrakenPrices(pairs) {\n  _s();\n  const [prices, setPrices] = useState({});\n  useEffect(() => {\n    let ws;\n    const connect = () => {\n      ws = new WebSocket(\"wss://ws.kraken.com/v2\");\n      ws.onopen = () => {\n        ws.send(JSON.stringify({\n          method: \"subscribe\",\n          params: {\n            channel: \"ticker\",\n            symbol: pairs\n          }\n        }));\n        ws.heartbeatInterval = setInterval(() => {\n          if (ws.readyState === WebSocket.OPEN) {\n            ws.send(JSON.stringify({\n              method: \"ping\"\n            }));\n          }\n        }, 20000);\n      };\n      ws.onmessage = event => {\n        try {\n          const msg = JSON.parse(event.data);\n          console.log(\"ðŸ“©\", msg);\n          if (msg.channel === \"ticker\" && (msg.type === \"snapshot\" || msg.type === \"update\")) {\n            msg.data.forEach(ticker => {\n              setPrices(prev => ({\n                ...prev,\n                [ticker.symbol]: ticker.last\n              }));\n            });\n          }\n        } catch (err) {\n          console.error(\"Error parsing:\", err);\n        }\n      };\n      ws.onclose = () => {\n        console.log(\"Reconnecting in 3 seconds...\");\n        clearInterval(ws.heartbeatInterval);\n        setTimeout(connect, 3000);\n      };\n      ws.onerror = () => {\n        console.error(\"WebSocket error, closing...\");\n        ws.close();\n      };\n    };\n    connect();\n    return () => {\n      if (ws) {\n        clearInterval(ws.heartbeatInterval);\n        ws.close();\n      }\n    };\n  }, [pairs]);\n  return prices;\n}\n_s(useKrakenPrices, \"AyDZng7+aEBipOGwqaguTBzobZI=\");","map":{"version":3,"names":["useEffect","useState","useKrakenPrices","pairs","_s","prices","setPrices","ws","connect","WebSocket","onopen","send","JSON","stringify","method","params","channel","symbol","heartbeatInterval","setInterval","readyState","OPEN","onmessage","event","msg","parse","data","console","log","type","forEach","ticker","prev","last","err","error","onclose","clearInterval","setTimeout","onerror","close"],"sources":["C:/Users/User/Documents/Trading212/TradingSimulation/frontend/src/Cryptos/KrakenApi.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport default function useKrakenPrices(pairs) {\r\n    const [prices, setPrices] = useState({});\r\n\r\n    useEffect(() => {\r\n        let ws;\r\n\r\n        const connect = () => {\r\n            ws = new WebSocket(\"wss://ws.kraken.com/v2\");\r\n\r\n            ws.onopen = () => {\r\n                ws.send(JSON.stringify({\r\n                    method: \"subscribe\",\r\n                    params: {\r\n                        channel: \"ticker\",\r\n                        symbol: pairs\r\n                    }\r\n                }));\r\n\r\n                ws.heartbeatInterval = setInterval(() => {\r\n                    if (ws.readyState === WebSocket.OPEN) {\r\n                        ws.send(JSON.stringify({ method: \"ping\" }));\r\n                    }\r\n                }, 20000);\r\n            };\r\n\r\n            ws.onmessage = (event) => {\r\n                try {\r\n                    const msg = JSON.parse(event.data);\r\n                    console.log(\"ðŸ“©\", msg);\r\n                    if (msg.channel === \"ticker\" && (msg.type === \"snapshot\" || msg.type === \"update\")) {\r\n                        msg.data.forEach(ticker => {\r\n                            setPrices(prev => ({\r\n                                ...prev,\r\n                                [ticker.symbol]: ticker.last\r\n                            }));\r\n                        });\r\n                    }\r\n                } catch (err) {\r\n                    console.error(\"Error parsing:\", err);\r\n                }\r\n            };\r\n\r\n            ws.onclose = () => {\r\n                console.log(\"Reconnecting in 3 seconds...\");\r\n                clearInterval(ws.heartbeatInterval);\r\n                setTimeout(connect, 3000);\r\n            };\r\n\r\n            ws.onerror = () => {\r\n                console.error(\"WebSocket error, closing...\");\r\n                ws.close();\r\n            };\r\n        };\r\n\r\n        connect();\r\n\r\n        return () => {\r\n            if (ws) {\r\n                clearInterval(ws.heartbeatInterval);\r\n                ws.close();\r\n            }\r\n        };\r\n    }, [pairs]);\r\n\r\n    return prices;\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,eAAe,SAASC,eAAeA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC3C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,IAAIO,EAAE;IAEN,MAAMC,OAAO,GAAGA,CAAA,KAAM;MAClBD,EAAE,GAAG,IAAIE,SAAS,CAAC,wBAAwB,CAAC;MAE5CF,EAAE,CAACG,MAAM,GAAG,MAAM;QACdH,EAAE,CAACI,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;UACnBC,MAAM,EAAE,WAAW;UACnBC,MAAM,EAAE;YACJC,OAAO,EAAE,QAAQ;YACjBC,MAAM,EAAEd;UACZ;QACJ,CAAC,CAAC,CAAC;QAEHI,EAAE,CAACW,iBAAiB,GAAGC,WAAW,CAAC,MAAM;UACrC,IAAIZ,EAAE,CAACa,UAAU,KAAKX,SAAS,CAACY,IAAI,EAAE;YAClCd,EAAE,CAACI,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;cAAEC,MAAM,EAAE;YAAO,CAAC,CAAC,CAAC;UAC/C;QACJ,CAAC,EAAE,KAAK,CAAC;MACb,CAAC;MAEDP,EAAE,CAACe,SAAS,GAAIC,KAAK,IAAK;QACtB,IAAI;UACA,MAAMC,GAAG,GAAGZ,IAAI,CAACa,KAAK,CAACF,KAAK,CAACG,IAAI,CAAC;UAClCC,OAAO,CAACC,GAAG,CAAC,IAAI,EAAEJ,GAAG,CAAC;UACtB,IAAIA,GAAG,CAACR,OAAO,KAAK,QAAQ,KAAKQ,GAAG,CAACK,IAAI,KAAK,UAAU,IAAIL,GAAG,CAACK,IAAI,KAAK,QAAQ,CAAC,EAAE;YAChFL,GAAG,CAACE,IAAI,CAACI,OAAO,CAACC,MAAM,IAAI;cACvBzB,SAAS,CAAC0B,IAAI,KAAK;gBACf,GAAGA,IAAI;gBACP,CAACD,MAAM,CAACd,MAAM,GAAGc,MAAM,CAACE;cAC5B,CAAC,CAAC,CAAC;YACP,CAAC,CAAC;UACN;QACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;UACVP,OAAO,CAACQ,KAAK,CAAC,gBAAgB,EAAED,GAAG,CAAC;QACxC;MACJ,CAAC;MAED3B,EAAE,CAAC6B,OAAO,GAAG,MAAM;QACfT,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;QAC3CS,aAAa,CAAC9B,EAAE,CAACW,iBAAiB,CAAC;QACnCoB,UAAU,CAAC9B,OAAO,EAAE,IAAI,CAAC;MAC7B,CAAC;MAEDD,EAAE,CAACgC,OAAO,GAAG,MAAM;QACfZ,OAAO,CAACQ,KAAK,CAAC,6BAA6B,CAAC;QAC5C5B,EAAE,CAACiC,KAAK,CAAC,CAAC;MACd,CAAC;IACL,CAAC;IAEDhC,OAAO,CAAC,CAAC;IAET,OAAO,MAAM;MACT,IAAID,EAAE,EAAE;QACJ8B,aAAa,CAAC9B,EAAE,CAACW,iBAAiB,CAAC;QACnCX,EAAE,CAACiC,KAAK,CAAC,CAAC;MACd;IACJ,CAAC;EACL,CAAC,EAAE,CAACrC,KAAK,CAAC,CAAC;EAEX,OAAOE,MAAM;AACjB;AAACD,EAAA,CAjEuBF,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}