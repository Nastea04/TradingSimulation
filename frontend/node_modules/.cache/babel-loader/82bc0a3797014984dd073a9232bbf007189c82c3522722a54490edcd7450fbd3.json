{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst SYMBOL_MAP = {\n  \"BTC\": \"XBT/USD\",\n  \"ETH\": \"ETH/USD\",\n  \"ADA\": \"ADA/USD\",\n  \"XRP\": \"XRP/USD\",\n  \"SOL\": \"SOL/USD\",\n  \"DOGE\": \"DOGE/USD\",\n  \"DOT\": \"DOT/USD\",\n  \"MATIC\": \"MATIC/USD\",\n  \"LTC\": \"LTC/USD\",\n  \"TRX\": \"TRX/USD\"\n};\nexport default function useTopCryptos() {\n  _s();\n  const [cryptos, setCryptos] = useState([]);\n  useEffect(() => {\n    fetch(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=20&page=1&sparkline=false\").then(res => res.json()).then(data => {\n      const mapped = data.filter(c => SYMBOL_MAP[c.symbol.toUpperCase()]) // само тези, които ги има в мапа\n      .map(c => ({\n        symbol: SYMBOL_MAP[c.symbol.toUpperCase()],\n        // за Kraken\n        name: c.name,\n        logo: c.image\n      }));\n      setCryptos(mapped);\n    }).catch(err => console.error(\"Error fetching top cryptos:\", err));\n  }, []);\n  return cryptos;\n}\n_s(useTopCryptos, \"EQJvBb3StcVAt/RsPLmS7z4HOdE=\");","map":{"version":3,"names":["useEffect","useState","SYMBOL_MAP","useTopCryptos","_s","cryptos","setCryptos","fetch","then","res","json","data","mapped","filter","c","symbol","toUpperCase","map","name","logo","image","catch","err","console","error"],"sources":["C:/Users/User/Documents/Trading212/TradingSimulation/frontend/src/Cryptos/TopCryptos.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst SYMBOL_MAP = {\r\n    \"BTC\": \"XBT/USD\",\r\n    \"ETH\": \"ETH/USD\",\r\n    \"ADA\": \"ADA/USD\",\r\n    \"XRP\": \"XRP/USD\",\r\n    \"SOL\": \"SOL/USD\",\r\n    \"DOGE\": \"DOGE/USD\",\r\n    \"DOT\": \"DOT/USD\",\r\n    \"MATIC\": \"MATIC/USD\",\r\n    \"LTC\": \"LTC/USD\",\r\n    \"TRX\": \"TRX/USD\"\r\n};\r\n\r\nexport default function useTopCryptos() {\r\n    const [cryptos, setCryptos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=20&page=1&sparkline=false\")\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                const mapped = data\r\n                    .filter(c => SYMBOL_MAP[c.symbol.toUpperCase()]) // само тези, които ги има в мапа\r\n                    .map(c => ({\r\n                        symbol: SYMBOL_MAP[c.symbol.toUpperCase()], // за Kraken\r\n                        name: c.name,\r\n                        logo: c.image\r\n                    }));\r\n                setCryptos(mapped);\r\n            })\r\n            .catch(err => console.error(\"Error fetching top cryptos:\", err));\r\n    }, []);\r\n\r\n    return cryptos;\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,UAAU,GAAG;EACf,KAAK,EAAE,SAAS;EAChB,KAAK,EAAE,SAAS;EAChB,KAAK,EAAE,SAAS;EAChB,KAAK,EAAE,SAAS;EAChB,KAAK,EAAE,SAAS;EAChB,MAAM,EAAE,UAAU;EAClB,KAAK,EAAE,SAAS;EAChB,OAAO,EAAE,WAAW;EACpB,KAAK,EAAE,SAAS;EAChB,KAAK,EAAE;AACX,CAAC;AAED,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACZO,KAAK,CAAC,yHAAyH,CAAC,CAC3HC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACV,MAAMC,MAAM,GAAGD,IAAI,CACdE,MAAM,CAACC,CAAC,IAAIZ,UAAU,CAACY,CAAC,CAACC,MAAM,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;MAAA,CAChDC,GAAG,CAACH,CAAC,KAAK;QACPC,MAAM,EAAEb,UAAU,CAACY,CAAC,CAACC,MAAM,CAACC,WAAW,CAAC,CAAC,CAAC;QAAE;QAC5CE,IAAI,EAAEJ,CAAC,CAACI,IAAI;QACZC,IAAI,EAAEL,CAAC,CAACM;MACZ,CAAC,CAAC,CAAC;MACPd,UAAU,CAACM,MAAM,CAAC;IACtB,CAAC,CAAC,CACDS,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEF,GAAG,CAAC,CAAC;EACxE,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOjB,OAAO;AAClB;AAACD,EAAA,CApBuBD,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}