{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nexport default function useKrakenPrices(pairs) {\n  _s();\n  const [prices, setPrices] = useState({});\n  const wsRef = useRef(null);\n  const heartbeatRef = useRef(null);\n  const reconnectRef = useRef(null);\n  const isUnmountedRef = useRef(false);\n  const startHeartbeat = (ws, intervalMs = 15000) => {\n    clearInterval(heartbeatRef.current);\n    heartbeatRef.current = setInterval(() => {\n      if (ws.readyState === WebSocket.OPEN) {\n        ws.send(JSON.stringify({\n          method: \"ping\"\n        }));\n      }\n    }, intervalMs);\n  };\n  const stopHeartbeat = () => {\n    clearInterval(heartbeatRef.current);\n  };\n  const connect = () => {\n    if (isUnmountedRef.current) return;\n    const ws = new WebSocket(\"wss://ws.kraken.com/v2\");\n    wsRef.current = ws;\n    ws.onopen = () => {\n      console.log(\"‚úÖ Connected to Kraken\");\n      ws.send(JSON.stringify({\n        method: \"subscribe\",\n        params: {\n          channel: \"ticker\",\n          symbol: pairs\n        }\n      }));\n      startHeartbeat(ws);\n    };\n    ws.onmessage = event => {\n      try {\n        const msg = JSON.parse(event.data);\n        if (msg.channel === \"ticker\" && (msg.type === \"snapshot\" || msg.type === \"update\")) {\n          msg.data.forEach(ticker => {\n            setPrices(prev => ({\n              ...prev,\n              [ticker.symbol]: ticker.last\n            }));\n          });\n        }\n      } catch (err) {\n        console.error(\"‚ùå Parse error:\", err);\n      }\n    };\n    ws.onerror = () => {\n      console.error(\"‚ö†Ô∏è WebSocket error\");\n    };\n    ws.onclose = event => {\n      console.warn(`‚ö†Ô∏è Closed: code=${event.code}, reason=${event.reason || \"No reason\"}`);\n      stopHeartbeat();\n      if (!isUnmountedRef.current && event.code !== 1000) {\n        console.log(\"üîÑ Reconnecting in 3s...\");\n        reconnectRef.current = setTimeout(connect, 3000);\n      }\n    };\n  };\n  useEffect(() => {\n    connect();\n    return () => {\n      isUnmountedRef.current = true;\n      stopHeartbeat();\n      clearTimeout(reconnectRef.current);\n      if (wsRef.current) wsRef.current.close();\n    };\n  }, []); // —Å–∞–º–æ –ø—Ä–∏ mount\n\n  return prices;\n}\n_s(useKrakenPrices, \"AOQa8Wq25OyfPN48b9cBXKFvsBk=\");","map":{"version":3,"names":["useEffect","useState","useRef","useKrakenPrices","pairs","_s","prices","setPrices","wsRef","heartbeatRef","reconnectRef","isUnmountedRef","startHeartbeat","ws","intervalMs","clearInterval","current","setInterval","readyState","WebSocket","OPEN","send","JSON","stringify","method","stopHeartbeat","connect","onopen","console","log","params","channel","symbol","onmessage","event","msg","parse","data","type","forEach","ticker","prev","last","err","error","onerror","onclose","warn","code","reason","setTimeout","clearTimeout","close"],"sources":["C:/Users/User/Documents/Trading212/TradingSimulation/frontend/src/Cryptos/KrakenApi.js"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\r\n\r\nexport default function useKrakenPrices(pairs) {\r\n    const [prices, setPrices] = useState({});\r\n    const wsRef = useRef(null);\r\n    const heartbeatRef = useRef(null);\r\n    const reconnectRef = useRef(null);\r\n    const isUnmountedRef = useRef(false);\r\n\r\n    const startHeartbeat = (ws, intervalMs = 15000) => {\r\n        clearInterval(heartbeatRef.current);\r\n        heartbeatRef.current = setInterval(() => {\r\n            if (ws.readyState === WebSocket.OPEN) {\r\n                ws.send(JSON.stringify({ method: \"ping\" }));\r\n            }\r\n        }, intervalMs);\r\n    };\r\n\r\n    const stopHeartbeat = () => {\r\n        clearInterval(heartbeatRef.current);\r\n    };\r\n\r\n    const connect = () => {\r\n        if (isUnmountedRef.current) return;\r\n\r\n        const ws = new WebSocket(\"wss://ws.kraken.com/v2\");\r\n        wsRef.current = ws;\r\n\r\n        ws.onopen = () => {\r\n            console.log(\"‚úÖ Connected to Kraken\");\r\n\r\n            ws.send(JSON.stringify({\r\n                method: \"subscribe\",\r\n                params: {\r\n                    channel: \"ticker\",\r\n                    symbol: pairs\r\n                }\r\n            }));\r\n\r\n            startHeartbeat(ws);\r\n        };\r\n\r\n        ws.onmessage = (event) => {\r\n            try {\r\n                const msg = JSON.parse(event.data);\r\n                if (msg.channel === \"ticker\" && (msg.type === \"snapshot\" || msg.type === \"update\")) {\r\n                    msg.data.forEach(ticker => {\r\n                        setPrices(prev => ({\r\n                            ...prev,\r\n                            [ticker.symbol]: ticker.last\r\n                        }));\r\n                    });\r\n                }\r\n            } catch (err) {\r\n                console.error(\"‚ùå Parse error:\", err);\r\n            }\r\n        };\r\n\r\n        ws.onerror = () => {\r\n            console.error(\"‚ö†Ô∏è WebSocket error\");\r\n        };\r\n\r\n        ws.onclose = (event) => {\r\n            console.warn(`‚ö†Ô∏è Closed: code=${event.code}, reason=${event.reason || \"No reason\"}`);\r\n            stopHeartbeat();\r\n\r\n            if (!isUnmountedRef.current && event.code !== 1000) {\r\n                console.log(\"üîÑ Reconnecting in 3s...\");\r\n                reconnectRef.current = setTimeout(connect, 3000);\r\n            }\r\n        };\r\n    };\r\n\r\n    useEffect(() => {\r\n        connect();\r\n\r\n        return () => {\r\n            isUnmountedRef.current = true;\r\n            stopHeartbeat();\r\n            clearTimeout(reconnectRef.current);\r\n            if (wsRef.current) wsRef.current.close();\r\n        };\r\n    }, []); // —Å–∞–º–æ –ø—Ä–∏ mount\r\n\r\n    return prices;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}