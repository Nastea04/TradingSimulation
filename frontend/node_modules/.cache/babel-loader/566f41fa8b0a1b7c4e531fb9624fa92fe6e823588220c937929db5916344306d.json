{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nexport default function useKrakenPrices(pairs) {\n  _s();\n  const [prices, setPrices] = useState({});\n  const wsRef = useRef(null);\n  const reconnectTimeout = useRef(null);\n  const connect = () => {\n    const ws = new WebSocket(\"wss://ws.kraken.com/v2\");\n    wsRef.current = ws;\n    ws.onopen = () => {\n      ws.send(JSON.stringify({\n        method: \"subscribe\",\n        params: {\n          channel: \"ticker\",\n          symbol: pairs\n        }\n      }));\n    };\n    ws.onmessage = event => {\n      try {\n        const msg = JSON.parse(event.data);\n        if (msg.channel === \"ticker\" && (msg.type === \"snapshot\" || msg.type === \"update\")) {\n          msg.data.forEach(ticker => {\n            setPrices(prev => ({\n              ...prev,\n              [ticker.symbol]: ticker.last\n            }));\n          });\n        } else if (msg.channel === \"heartbeat\") {\n          // получен heartbeat → връзката е жива\n          // console.log(\"heartbeat received\");\n        }\n      } catch (err) {\n        console.error(\"Error parsing message:\", err);\n      }\n    };\n    ws.onclose = () => {\n      console.warn(\"WebSocket closed, reconnecting in 5s...\");\n      reconnectTimeout.current = setTimeout(connect, 5000);\n    };\n    ws.onerror = err => {\n      console.error(\"WebSocket error:\", err);\n      ws.close();\n    };\n  };\n  useEffect(() => {\n    connect();\n    return () => {\n      if (wsRef.current) wsRef.current.close();\n      if (reconnectTimeout.current) clearTimeout(reconnectTimeout.current);\n    };\n  }, [pairs]);\n  return prices;\n}\n_s(useKrakenPrices, \"v1QPjdHvxhnR9P2V5kYBK6zZMds=\");","map":{"version":3,"names":["useEffect","useRef","useState","useKrakenPrices","pairs","_s","prices","setPrices","wsRef","reconnectTimeout","connect","ws","WebSocket","current","onopen","send","JSON","stringify","method","params","channel","symbol","onmessage","event","msg","parse","data","type","forEach","ticker","prev","last","err","console","error","onclose","warn","setTimeout","onerror","close","clearTimeout"],"sources":["C:/Users/User/Documents/Trading212/TradingSimulation/frontend/src/Cryptos/KrakenApi.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\n\r\nexport default function useKrakenPrices(pairs) {\r\n    const [prices, setPrices] = useState({});\r\n    const wsRef = useRef(null);\r\n    const reconnectTimeout = useRef(null);\r\n\r\n    const connect = () => {\r\n        const ws = new WebSocket(\"wss://ws.kraken.com/v2\");\r\n        wsRef.current = ws;\r\n\r\n        ws.onopen = () => {\r\n            ws.send(JSON.stringify({\r\n                method: \"subscribe\",\r\n                params: {\r\n                    channel: \"ticker\",\r\n                    symbol: pairs\r\n                }\r\n            }));\r\n        };\r\n\r\n        ws.onmessage = (event) => {\r\n            try {\r\n                const msg = JSON.parse(event.data);\r\n\r\n                if (msg.channel === \"ticker\" && (msg.type === \"snapshot\" || msg.type === \"update\")) {\r\n                    msg.data.forEach(ticker => {\r\n                        setPrices(prev => ({\r\n                            ...prev,\r\n                            [ticker.symbol]: ticker.last\r\n                        }));\r\n                    });\r\n                } else if (msg.channel === \"heartbeat\") {\r\n                    // получен heartbeat → връзката е жива\r\n                    // console.log(\"heartbeat received\");\r\n                }\r\n\r\n            } catch (err) {\r\n                console.error(\"Error parsing message:\", err);\r\n            }\r\n        };\r\n\r\n        ws.onclose = () => {\r\n            console.warn(\"WebSocket closed, reconnecting in 5s...\");\r\n            reconnectTimeout.current = setTimeout(connect, 5000);\r\n        };\r\n\r\n        ws.onerror = (err) => {\r\n            console.error(\"WebSocket error:\", err);\r\n            ws.close();\r\n        };\r\n    };\r\n\r\n    useEffect(() => {\r\n        connect();\r\n        return () => {\r\n            if (wsRef.current) wsRef.current.close();\r\n            if (reconnectTimeout.current) clearTimeout(reconnectTimeout.current);\r\n        };\r\n    }, [pairs]);\r\n\r\n    return prices;\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAEnD,eAAe,SAASC,eAAeA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC3C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAMM,KAAK,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC1B,MAAMQ,gBAAgB,GAAGR,MAAM,CAAC,IAAI,CAAC;EAErC,MAAMS,OAAO,GAAGA,CAAA,KAAM;IAClB,MAAMC,EAAE,GAAG,IAAIC,SAAS,CAAC,wBAAwB,CAAC;IAClDJ,KAAK,CAACK,OAAO,GAAGF,EAAE;IAElBA,EAAE,CAACG,MAAM,GAAG,MAAM;MACdH,EAAE,CAACI,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;QACnBC,MAAM,EAAE,WAAW;QACnBC,MAAM,EAAE;UACJC,OAAO,EAAE,QAAQ;UACjBC,MAAM,EAAEjB;QACZ;MACJ,CAAC,CAAC,CAAC;IACP,CAAC;IAEDO,EAAE,CAACW,SAAS,GAAIC,KAAK,IAAK;MACtB,IAAI;QACA,MAAMC,GAAG,GAAGR,IAAI,CAACS,KAAK,CAACF,KAAK,CAACG,IAAI,CAAC;QAElC,IAAIF,GAAG,CAACJ,OAAO,KAAK,QAAQ,KAAKI,GAAG,CAACG,IAAI,KAAK,UAAU,IAAIH,GAAG,CAACG,IAAI,KAAK,QAAQ,CAAC,EAAE;UAChFH,GAAG,CAACE,IAAI,CAACE,OAAO,CAACC,MAAM,IAAI;YACvBtB,SAAS,CAACuB,IAAI,KAAK;cACf,GAAGA,IAAI;cACP,CAACD,MAAM,CAACR,MAAM,GAAGQ,MAAM,CAACE;YAC5B,CAAC,CAAC,CAAC;UACP,CAAC,CAAC;QACN,CAAC,MAAM,IAAIP,GAAG,CAACJ,OAAO,KAAK,WAAW,EAAE;UACpC;UACA;QAAA;MAGR,CAAC,CAAC,OAAOY,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;MAChD;IACJ,CAAC;IAEDrB,EAAE,CAACwB,OAAO,GAAG,MAAM;MACfF,OAAO,CAACG,IAAI,CAAC,yCAAyC,CAAC;MACvD3B,gBAAgB,CAACI,OAAO,GAAGwB,UAAU,CAAC3B,OAAO,EAAE,IAAI,CAAC;IACxD,CAAC;IAEDC,EAAE,CAAC2B,OAAO,GAAIN,GAAG,IAAK;MAClBC,OAAO,CAACC,KAAK,CAAC,kBAAkB,EAAEF,GAAG,CAAC;MACtCrB,EAAE,CAAC4B,KAAK,CAAC,CAAC;IACd,CAAC;EACL,CAAC;EAEDvC,SAAS,CAAC,MAAM;IACZU,OAAO,CAAC,CAAC;IACT,OAAO,MAAM;MACT,IAAIF,KAAK,CAACK,OAAO,EAAEL,KAAK,CAACK,OAAO,CAAC0B,KAAK,CAAC,CAAC;MACxC,IAAI9B,gBAAgB,CAACI,OAAO,EAAE2B,YAAY,CAAC/B,gBAAgB,CAACI,OAAO,CAAC;IACxE,CAAC;EACL,CAAC,EAAE,CAACT,KAAK,CAAC,CAAC;EAEX,OAAOE,MAAM;AACjB;AAACD,EAAA,CA5DuBF,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}