{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nexport default function useKrakenPrices(pairs) {\n  _s();\n  const [prices, setPrices] = useState({});\n  useEffect(() => {\n    if (!pairs || pairs.length === 0) return;\n    const ws = new WebSocket(\"wss://ws.kraken.com/v2\");\n    ws.onopen = () => {\n      console.log(\"Connected to Kraken v2\");\n      ws.send(JSON.stringify({\n        event: \"subscribe\",\n        pair: pairs,\n        subscription: {\n          name: \"ticker\"\n        }\n      }));\n    };\n    ws.onmessage = event => {\n      var _data$;\n      const data = JSON.parse(event.data);\n      if (Array.isArray(data) && (_data$ = data[1]) !== null && _data$ !== void 0 && _data$.c) {\n        const pair = data[3];\n        const price = parseFloat(data[1].c[0]).toFixed(2);\n        setPrices(prev => ({\n          ...prev,\n          [pair]: price\n        }));\n      }\n    };\n    return () => ws.close();\n  }, [pairs]);\n  return prices;\n}\n_s(useKrakenPrices, \"AyDZng7+aEBipOGwqaguTBzobZI=\");","map":{"version":3,"names":["useEffect","useState","useKrakenPrices","pairs","_s","prices","setPrices","length","ws","WebSocket","onopen","console","log","send","JSON","stringify","event","pair","subscription","name","onmessage","_data$","data","parse","Array","isArray","c","price","parseFloat","toFixed","prev","close"],"sources":["C:/Users/User/Documents/Trading212/TradingSimulation/frontend/src/Cryptos/KrakenApi.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport default function useKrakenPrices(pairs) {\r\n    const [prices, setPrices] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (!pairs || pairs.length === 0) return;\r\n\r\n        const ws = new WebSocket(\"wss://ws.kraken.com/v2\");\r\n\r\n        ws.onopen = () => {\r\n            console.log(\"Connected to Kraken v2\");\r\n\r\n            ws.send(JSON.stringify({\r\n                event: \"subscribe\",\r\n                pair: pairs,\r\n                subscription: { name: \"ticker\" }\r\n            }));\r\n        };\r\n\r\n        ws.onmessage = (event) => {\r\n            const data = JSON.parse(event.data);\r\n\r\n            if (Array.isArray(data) && data[1]?.c) {\r\n                const pair = data[3];\r\n                const price = parseFloat(data[1].c[0]).toFixed(2);\r\n                setPrices(prev => ({\r\n                    ...prev,\r\n                    [pair]: price\r\n                }));\r\n            }\r\n        };\r\n\r\n        return () => ws.close();\r\n    }, [pairs]);\r\n\r\n    return prices;\r\n}\r\n\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,eAAe,SAASC,eAAeA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC3C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,IAAI,CAACG,KAAK,IAAIA,KAAK,CAACI,MAAM,KAAK,CAAC,EAAE;IAElC,MAAMC,EAAE,GAAG,IAAIC,SAAS,CAAC,wBAAwB,CAAC;IAElDD,EAAE,CAACE,MAAM,GAAG,MAAM;MACdC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MAErCJ,EAAE,CAACK,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;QACnBC,KAAK,EAAE,WAAW;QAClBC,IAAI,EAAEd,KAAK;QACXe,YAAY,EAAE;UAAEC,IAAI,EAAE;QAAS;MACnC,CAAC,CAAC,CAAC;IACP,CAAC;IAEDX,EAAE,CAACY,SAAS,GAAIJ,KAAK,IAAK;MAAA,IAAAK,MAAA;MACtB,MAAMC,IAAI,GAAGR,IAAI,CAACS,KAAK,CAACP,KAAK,CAACM,IAAI,CAAC;MAEnC,IAAIE,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,KAAAD,MAAA,GAAIC,IAAI,CAAC,CAAC,CAAC,cAAAD,MAAA,eAAPA,MAAA,CAASK,CAAC,EAAE;QACnC,MAAMT,IAAI,GAAGK,IAAI,CAAC,CAAC,CAAC;QACpB,MAAMK,KAAK,GAAGC,UAAU,CAACN,IAAI,CAAC,CAAC,CAAC,CAACI,CAAC,CAAC,CAAC,CAAC,CAAC,CAACG,OAAO,CAAC,CAAC,CAAC;QACjDvB,SAAS,CAACwB,IAAI,KAAK;UACf,GAAGA,IAAI;UACP,CAACb,IAAI,GAAGU;QACZ,CAAC,CAAC,CAAC;MACP;IACJ,CAAC;IAED,OAAO,MAAMnB,EAAE,CAACuB,KAAK,CAAC,CAAC;EAC3B,CAAC,EAAE,CAAC5B,KAAK,CAAC,CAAC;EAEX,OAAOE,MAAM;AACjB;AAACD,EAAA,CAnCuBF,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}