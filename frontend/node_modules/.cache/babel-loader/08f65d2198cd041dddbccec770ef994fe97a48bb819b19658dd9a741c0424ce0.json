{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Trading212\\\\TradingSimulation\\\\frontend\\\\src\\\\LoginSignin\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = props => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!response.ok) {\n      alert(\"Login failed\");\n      return;\n    }\n    const user = await response.json();\n    if (user) {\n      console.log(\"Logged in:\", user);\n      alert(`Welcome ${user.name}!`);\n    } else {\n      alert(\"Invalid credentials\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inputDiv\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"inputForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"registerText\",\n        children: [\"Don't have an account?\", /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => props.onFormSwitch(\"Signin\"),\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        placeholder: \"Enter your e-mail\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        placeholder: \"Enter your password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 6\n  }, this);\n};\n_s(Login, \"3B3pqDcVnkT+z/sPK6Z9zQsLP+s=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","props","_s","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","response","ok","alert","user","json","console","log","name","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onFormSwitch","htmlFor","value","onChange","target","type","id","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/Trading212/TradingSimulation/frontend/src/LoginSignin/Login.jsx"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport \"./form.css\"\r\n\r\nconst Login = (props)=>{\r\n    const [email, setEmail]=useState(\"\");\r\n    const [password, setPassword]=useState(\"\");\r\n\r\n    const handleSubmit=async(e)=>{\r\n        e.preventDefault();\r\n        if (!response.ok) {\r\n    alert(\"Login failed\");\r\n    return;\r\n}\r\n\r\nconst user = await response.json();\r\nif (user) {\r\n    console.log(\"Logged in:\", user);\r\n    alert(`Welcome ${user.name}!`);\r\n} else {\r\n    alert(\"Invalid credentials\");\r\n}\r\n\r\n    }\r\n\r\n    return(\r\n     <div className=\"inputDiv\">\r\n        <form className=\"inputForm\" onSubmit={handleSubmit}>\r\n            <h2>Log In</h2>\r\n        \r\n            <p className=\"registerText\">\r\n                Don't have an account?\r\n                <a onClick={() => props.onFormSwitch(\"Signin\")}>Sign in</a>\r\n            </p>\r\n            <label htmlFor=\"email\">E-mail</label>\r\n            <input\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter your e-mail\"\r\n                    required\r\n            />\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Enter your password\"\r\n                    required\r\n                />\r\n            <button type=\"submit\">Log In</button>\r\n        </form>\r\n    </div>\r\n    )\r\n}\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}