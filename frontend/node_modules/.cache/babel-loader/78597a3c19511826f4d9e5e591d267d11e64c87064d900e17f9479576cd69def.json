{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nexport default function useKrakenPricesRest(pairs, refreshInterval = 5000) {\n  _s();\n  const [prices, setPrices] = useState({});\n  useEffect(() => {\n    if (!pairs || pairs.length === 0) return;\n\n    // филтрираме само валидни символи\n    const validPairs = pairs.filter(p => typeof p === \"string\" && p.includes(\"/\"));\n    if (validPairs.length === 0) return;\n    const fetchPrices = () => {\n      validPairs.forEach(symbol => {\n        // Kraken иска без \"/\", затова заменяме\n        const krakenSymbol = symbol.replace(\"/\", \"\");\n        fetch(`https://api.kraken.com/0/public/Ticker?pair=${krakenSymbol}`).then(res => res.json()).then(data => {\n          if (!data.result) return;\n          const pairKey = Object.keys(data.result)[0];\n          if (pairKey) {\n            const lastPrice = data.result[pairKey].c[0];\n            setPrices(prev => ({\n              ...prev,\n              [symbol]: parseFloat(lastPrice).toFixed(2)\n            }));\n          }\n        }).catch(err => console.error(`Error fetching ${symbol}:`, err));\n      });\n    };\n    fetchPrices(); // първо зареждане\n    const interval = setInterval(fetchPrices, refreshInterval);\n    return () => clearInterval(interval);\n  }, [pairs, refreshInterval]);\n  return prices;\n}\n_s(useKrakenPricesRest, \"AyDZng7+aEBipOGwqaguTBzobZI=\");","map":{"version":3,"names":["useEffect","useState","useKrakenPricesRest","pairs","refreshInterval","_s","prices","setPrices","length","validPairs","filter","p","includes","fetchPrices","forEach","symbol","krakenSymbol","replace","fetch","then","res","json","data","result","pairKey","Object","keys","lastPrice","c","prev","parseFloat","toFixed","catch","err","console","error","interval","setInterval","clearInterval"],"sources":["C:/Users/User/Documents/Trading212/TradingSimulation/frontend/src/Cryptos/KrakenApiBugSolve.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport default function useKrakenPricesRest(pairs, refreshInterval = 5000) {\r\n    const [prices, setPrices] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (!pairs || pairs.length === 0) return;\r\n\r\n        // филтрираме само валидни символи\r\n        const validPairs = pairs.filter(p => typeof p === \"string\" && p.includes(\"/\"));\r\n\r\n        if (validPairs.length === 0) return;\r\n\r\n        const fetchPrices = () => {\r\n            validPairs.forEach(symbol => {\r\n                // Kraken иска без \"/\", затова заменяме\r\n                const krakenSymbol = symbol.replace(\"/\", \"\");\r\n\r\n                fetch(`https://api.kraken.com/0/public/Ticker?pair=${krakenSymbol}`)\r\n                    .then(res => res.json())\r\n                    .then(data => {\r\n                        if (!data.result) return;\r\n                        const pairKey = Object.keys(data.result)[0];\r\n                        if (pairKey) {\r\n                            const lastPrice = data.result[pairKey].c[0];\r\n                            setPrices(prev => ({\r\n                                ...prev,\r\n                                [symbol]: parseFloat(lastPrice).toFixed(2)\r\n                            }));\r\n                        }\r\n                    })\r\n                    .catch(err => console.error(`Error fetching ${symbol}:`, err));\r\n            });\r\n        };\r\n\r\n        fetchPrices(); // първо зареждане\r\n        const interval = setInterval(fetchPrices, refreshInterval);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [pairs, refreshInterval]);\r\n\r\n    return prices;\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,eAAe,SAASC,mBAAmBA,CAACC,KAAK,EAAEC,eAAe,GAAG,IAAI,EAAE;EAAAC,EAAA;EACvE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,IAAI,CAACG,KAAK,IAAIA,KAAK,CAACK,MAAM,KAAK,CAAC,EAAE;;IAElC;IACA,MAAMC,UAAU,GAAGN,KAAK,CAACO,MAAM,CAACC,CAAC,IAAI,OAAOA,CAAC,KAAK,QAAQ,IAAIA,CAAC,CAACC,QAAQ,CAAC,GAAG,CAAC,CAAC;IAE9E,IAAIH,UAAU,CAACD,MAAM,KAAK,CAAC,EAAE;IAE7B,MAAMK,WAAW,GAAGA,CAAA,KAAM;MACtBJ,UAAU,CAACK,OAAO,CAACC,MAAM,IAAI;QACzB;QACA,MAAMC,YAAY,GAAGD,MAAM,CAACE,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;QAE5CC,KAAK,CAAC,+CAA+CF,YAAY,EAAE,CAAC,CAC/DG,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;UACV,IAAI,CAACA,IAAI,CAACC,MAAM,EAAE;UAClB,MAAMC,OAAO,GAAGC,MAAM,CAACC,IAAI,CAACJ,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;UAC3C,IAAIC,OAAO,EAAE;YACT,MAAMG,SAAS,GAAGL,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,CAACI,CAAC,CAAC,CAAC,CAAC;YAC3CrB,SAAS,CAACsB,IAAI,KAAK;cACf,GAAGA,IAAI;cACP,CAACd,MAAM,GAAGe,UAAU,CAACH,SAAS,CAAC,CAACI,OAAO,CAAC,CAAC;YAC7C,CAAC,CAAC,CAAC;UACP;QACJ,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,kBAAkBpB,MAAM,GAAG,EAAEkB,GAAG,CAAC,CAAC;MACtE,CAAC,CAAC;IACN,CAAC;IAEDpB,WAAW,CAAC,CAAC,CAAC,CAAC;IACf,MAAMuB,QAAQ,GAAGC,WAAW,CAACxB,WAAW,EAAET,eAAe,CAAC;IAE1D,OAAO,MAAMkC,aAAa,CAACF,QAAQ,CAAC;EACxC,CAAC,EAAE,CAACjC,KAAK,EAAEC,eAAe,CAAC,CAAC;EAE5B,OAAOE,MAAM;AACjB;AAACD,EAAA,CAxCuBH,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}