{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nexport default function useKrakenPrices(pairs) {\n  _s();\n  const [prices, setPrices] = useState({});\n  const wsRef = useRef(null);\n  const reconnectTimeoutRef = useRef(null);\n  const heartbeatIntervalRef = useRef(null);\n  const isUnmountedRef = useRef(false);\n  useEffect(() => {\n    function connect() {\n      if (isUnmountedRef.current) return;\n      const ws = new WebSocket(\"wss://ws.kraken.com/v2\");\n      wsRef.current = ws;\n      ws.onopen = () => {\n        console.log(\"✅ Connected to Kraken\");\n\n        // Изпращаме subscribe\n        ws.send(JSON.stringify({\n          method: \"subscribe\",\n          params: {\n            channel: \"ticker\",\n            symbol: pairs\n          }\n        }));\n        heartbeatIntervalRef.current = setInterval(() => {\n          if (ws.readyState === WebSocket.OPEN) {\n            ws.send(JSON.stringify({\n              method: \"ping\"\n            }));\n          }\n        }, 20000);\n      };\n      ws.onmessage = event => {\n        try {\n          const msg = JSON.parse(event.data);\n          if (msg.channel === \"ticker\" && (msg.type === \"snapshot\" || msg.type === \"update\")) {\n            msg.data.forEach(ticker => {\n              setPrices(prev => ({\n                ...prev,\n                [ticker.symbol]: ticker.last\n              }));\n            });\n          }\n        } catch (err) {\n          console.error(\"❌ Error parsing message:\", err);\n        }\n      };\n      ws.onerror = () => {\n        console.error(\"⚠️ WebSocket error\");\n      };\n      ws.onclose = event => {\n        console.warn(`⚠️ Closed: code=${event.code}, reason=${event.reason || \"No reason\"}`);\n        clearInterval(heartbeatIntervalRef.current);\n\n        // Реконект при 1006 или други ненормални затваряния\n        if (!isUnmountedRef.current && event.code !== 1000) {\n          reconnectTimeoutRef.current = setTimeout(connect, 3000);\n        }\n      };\n    }\n    connect();\n    return () => {\n      isUnmountedRef.current = true;\n      clearTimeout(reconnectTimeoutRef.current);\n      clearInterval(heartbeatIntervalRef.current);\n      if (wsRef.current) wsRef.current.close();\n    };\n  }, [pairs]);\n  return prices;\n}\n_s(useKrakenPrices, \"29rP9JC3Qo6M4lBcFmdtky7Dswk=\");","map":{"version":3,"names":["useEffect","useState","useRef","useKrakenPrices","pairs","_s","prices","setPrices","wsRef","reconnectTimeoutRef","heartbeatIntervalRef","isUnmountedRef","connect","current","ws","WebSocket","onopen","console","log","send","JSON","stringify","method","params","channel","symbol","setInterval","readyState","OPEN","onmessage","event","msg","parse","data","type","forEach","ticker","prev","last","err","error","onerror","onclose","warn","code","reason","clearInterval","setTimeout","clearTimeout","close"],"sources":["C:/Users/User/Documents/Trading212/TradingSimulation/frontend/src/Cryptos/KrakenApi.js"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\r\n\r\nexport default function useKrakenPrices(pairs) {\r\n    const [prices, setPrices] = useState({});\r\n    const wsRef = useRef(null);\r\n    const reconnectTimeoutRef = useRef(null);\r\n    const heartbeatIntervalRef = useRef(null);\r\n    const isUnmountedRef = useRef(false);\r\n\r\n    useEffect(() => {\r\n        function connect() {\r\n            if (isUnmountedRef.current) return;\r\n\r\n            const ws = new WebSocket(\"wss://ws.kraken.com/v2\");\r\n            wsRef.current = ws;\r\n\r\n            ws.onopen = () => {\r\n                console.log(\"✅ Connected to Kraken\");\r\n\r\n                // Изпращаме subscribe\r\n                ws.send(JSON.stringify({\r\n                    method: \"subscribe\",\r\n                    params: {\r\n                        channel: \"ticker\",\r\n                        symbol: pairs \r\n                    }\r\n                }));\r\n\r\n                heartbeatIntervalRef.current = setInterval(() => {\r\n                    if (ws.readyState === WebSocket.OPEN) {\r\n                        ws.send(JSON.stringify({ method: \"ping\" }));\r\n                    }\r\n                }, 20000);\r\n            };\r\n\r\n            ws.onmessage = (event) => {\r\n                try {\r\n                    const msg = JSON.parse(event.data);\r\n\r\n                    if (msg.channel === \"ticker\" &&\r\n                        (msg.type === \"snapshot\" || msg.type === \"update\")) {\r\n                        msg.data.forEach(ticker => {\r\n                            setPrices(prev => ({\r\n                                ...prev,\r\n                                [ticker.symbol]: ticker.last\r\n                            }));\r\n                        });\r\n                    }\r\n                } catch (err) {\r\n                    console.error(\"❌ Error parsing message:\", err);\r\n                }\r\n            };\r\n\r\n            ws.onerror = () => {\r\n                console.error(\"⚠️ WebSocket error\");\r\n            };\r\n\r\n            ws.onclose = (event) => {\r\n                console.warn(`⚠️ Closed: code=${event.code}, reason=${event.reason || \"No reason\"}`);\r\n\r\n                clearInterval(heartbeatIntervalRef.current);\r\n\r\n                // Реконект при 1006 или други ненормални затваряния\r\n                if (!isUnmountedRef.current && event.code !== 1000) {\r\n                    reconnectTimeoutRef.current = setTimeout(connect, 3000);\r\n                }\r\n            };\r\n        }\r\n\r\n        connect();\r\n\r\n        return () => {\r\n            isUnmountedRef.current = true;\r\n            clearTimeout(reconnectTimeoutRef.current);\r\n            clearInterval(heartbeatIntervalRef.current);\r\n            if (wsRef.current) wsRef.current.close();\r\n        };\r\n    }, [pairs]);\r\n\r\n    return prices;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}