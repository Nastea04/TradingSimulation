{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nexport default function useKrakenPrices(pairs) {\n  _s();\n  const [prices, setPrices] = useState({});\n  useEffect(() => {\n    // WebSocket към Kraken API v2\n    const ws = new WebSocket(\"wss://ws.kraken.com/v2\");\n    ws.onopen = () => {\n      console.log(\"Connected to Kraken WebSocket\");\n\n      // Абонираме се за цените за всяка двойка\n      ws.send(JSON.stringify({\n        method: \"subscribe\",\n        params: {\n          channel: \"ticker\",\n          symbol: pairs\n        }\n      }));\n    };\n    ws.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n\n        // Kraken връща ticker update\n        if (data.channel === \"ticker\" && data.type === \"update\") {\n          var _data$price, _data$price$c, _data$price2;\n          const pair = data.symbol;\n          const price = ((_data$price = data.price) === null || _data$price === void 0 ? void 0 : (_data$price$c = _data$price.c) === null || _data$price$c === void 0 ? void 0 : _data$price$c[0]) || ((_data$price2 = data.price) === null || _data$price2 === void 0 ? void 0 : _data$price2.close) || null; // \"c\" = last trade price\n\n          if (price) {\n            setPrices(prev => ({\n              ...prev,\n              [pair]: parseFloat(price).toFixed(2)\n            }));\n          }\n        }\n      } catch (err) {\n        console.error(\"Error parsing message\", err);\n      }\n    };\n    ws.onclose = () => {\n      console.log(\"Disconnected from Kraken WebSocket\");\n    };\n    return () => ws.close();\n  }, [pairs]);\n  return prices;\n}\n_s(useKrakenPrices, \"AyDZng7+aEBipOGwqaguTBzobZI=\");","map":{"version":3,"names":["useEffect","useState","useKrakenPrices","pairs","_s","prices","setPrices","ws","WebSocket","onopen","console","log","send","JSON","stringify","method","params","channel","symbol","onmessage","event","data","parse","type","_data$price","_data$price$c","_data$price2","pair","price","c","close","prev","parseFloat","toFixed","err","error","onclose"],"sources":["C:/Users/User/Documents/Trading212/TradingSimulation/frontend/src/KrackenApi.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport default function useKrakenPrices(pairs) {\r\n    const [prices, setPrices] = useState({});\r\n\r\n    useEffect(() => {\r\n        // WebSocket към Kraken API v2\r\n        const ws = new WebSocket(\"wss://ws.kraken.com/v2\");\r\n\r\n        ws.onopen = () => {\r\n            console.log(\"Connected to Kraken WebSocket\");\r\n\r\n            // Абонираме се за цените за всяка двойка\r\n            ws.send(JSON.stringify({\r\n                method: \"subscribe\",\r\n                params: {\r\n                    channel: \"ticker\",\r\n                    symbol: pairs\r\n                }\r\n            }));\r\n        };\r\n\r\n        ws.onmessage = (event) => {\r\n            try {\r\n                const data = JSON.parse(event.data);\r\n\r\n                // Kraken връща ticker update\r\n                if (data.channel === \"ticker\" && data.type === \"update\") {\r\n                    const pair = data.symbol;\r\n                    const price = data.price?.c?.[0] || data.price?.close || null; // \"c\" = last trade price\r\n\r\n                    if (price) {\r\n                        setPrices(prev => ({\r\n                            ...prev,\r\n                            [pair]: parseFloat(price).toFixed(2)\r\n                        }));\r\n                    }\r\n                }\r\n            } catch (err) {\r\n                console.error(\"Error parsing message\", err);\r\n            }\r\n        };\r\n\r\n        ws.onclose = () => {\r\n            console.log(\"Disconnected from Kraken WebSocket\");\r\n        };\r\n\r\n        return () => ws.close();\r\n    }, [pairs]);\r\n\r\n    return prices;\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,eAAe,SAASC,eAAeA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC3C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ;IACA,MAAMO,EAAE,GAAG,IAAIC,SAAS,CAAC,wBAAwB,CAAC;IAElDD,EAAE,CAACE,MAAM,GAAG,MAAM;MACdC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;;MAE5C;MACAJ,EAAE,CAACK,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;QACnBC,MAAM,EAAE,WAAW;QACnBC,MAAM,EAAE;UACJC,OAAO,EAAE,QAAQ;UACjBC,MAAM,EAAEf;QACZ;MACJ,CAAC,CAAC,CAAC;IACP,CAAC;IAEDI,EAAE,CAACY,SAAS,GAAIC,KAAK,IAAK;MACtB,IAAI;QACA,MAAMC,IAAI,GAAGR,IAAI,CAACS,KAAK,CAACF,KAAK,CAACC,IAAI,CAAC;;QAEnC;QACA,IAAIA,IAAI,CAACJ,OAAO,KAAK,QAAQ,IAAII,IAAI,CAACE,IAAI,KAAK,QAAQ,EAAE;UAAA,IAAAC,WAAA,EAAAC,aAAA,EAAAC,YAAA;UACrD,MAAMC,IAAI,GAAGN,IAAI,CAACH,MAAM;UACxB,MAAMU,KAAK,GAAG,EAAAJ,WAAA,GAAAH,IAAI,CAACO,KAAK,cAAAJ,WAAA,wBAAAC,aAAA,GAAVD,WAAA,CAAYK,CAAC,cAAAJ,aAAA,uBAAbA,aAAA,CAAgB,CAAC,CAAC,OAAAC,YAAA,GAAIL,IAAI,CAACO,KAAK,cAAAF,YAAA,uBAAVA,YAAA,CAAYI,KAAK,KAAI,IAAI,CAAC,CAAC;;UAE/D,IAAIF,KAAK,EAAE;YACPtB,SAAS,CAACyB,IAAI,KAAK;cACf,GAAGA,IAAI;cACP,CAACJ,IAAI,GAAGK,UAAU,CAACJ,KAAK,CAAC,CAACK,OAAO,CAAC,CAAC;YACvC,CAAC,CAAC,CAAC;UACP;QACJ;MACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVxB,OAAO,CAACyB,KAAK,CAAC,uBAAuB,EAAED,GAAG,CAAC;MAC/C;IACJ,CAAC;IAED3B,EAAE,CAAC6B,OAAO,GAAG,MAAM;MACf1B,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;IACrD,CAAC;IAED,OAAO,MAAMJ,EAAE,CAACuB,KAAK,CAAC,CAAC;EAC3B,CAAC,EAAE,CAAC3B,KAAK,CAAC,CAAC;EAEX,OAAOE,MAAM;AACjB;AAACD,EAAA,CAjDuBF,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}