{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nexport default function useKrakenTop20() {\n  _s();\n  const [cryptos, setCryptos] = useState([]);\n  useEffect(() => {\n    fetch(\"https://api.coingecko.com/api/v3/exchanges/kraken\").then(res => res.json()).then(data => {\n      if (!data.tickers) return;\n\n      // Филтрираме само USD търговски двойки\n      const usdPairs = data.tickers.filter(t => t.target === \"USD\");\n\n      // Сортираме по обем и взимаме топ 20\n      const top20 = usdPairs.sort((a, b) => b.volume - a.volume).slice(0, 20).map(t => {\n        var _t$base_coin, _t$base_coin2;\n        return {\n          symbol: `${t.base}/${t.target}`,\n          // BTC/USD\n          name: ((_t$base_coin = t.base_coin) === null || _t$base_coin === void 0 ? void 0 : _t$base_coin.name) || t.base,\n          // Bitcoin\n          logo: ((_t$base_coin2 = t.base_coin) === null || _t$base_coin2 === void 0 ? void 0 : _t$base_coin2.large) || \"\",\n          // Лого\n          price: t.last // Цена в USD\n        };\n      });\n      setCryptos(top20);\n    }).catch(err => console.error(\"Error fetching Kraken top 20:\", err));\n  }, []);\n  return cryptos;\n}\n_s(useKrakenTop20, \"EQJvBb3StcVAt/RsPLmS7z4HOdE=\");","map":{"version":3,"names":["useEffect","useState","useKrakenTop20","_s","cryptos","setCryptos","fetch","then","res","json","data","tickers","usdPairs","filter","t","target","top20","sort","a","b","volume","slice","map","_t$base_coin","_t$base_coin2","symbol","base","name","base_coin","logo","large","price","last","catch","err","console","error"],"sources":["C:/Users/User/Documents/Trading212/TradingSimulation/frontend/src/Cryptos/KrakenApi.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport default function useKrakenTop20() {\r\n    const [cryptos, setCryptos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://api.coingecko.com/api/v3/exchanges/kraken\")\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (!data.tickers) return;\r\n\r\n                // Филтрираме само USD търговски двойки\r\n                const usdPairs = data.tickers.filter(t => t.target === \"USD\");\r\n\r\n                // Сортираме по обем и взимаме топ 20\r\n                const top20 = usdPairs\r\n                    .sort((a, b) => b.volume - a.volume)\r\n                    .slice(0, 20)\r\n                    .map(t => ({\r\n                        symbol: `${t.base}/${t.target}`,        // BTC/USD\r\n                        name: t.base_coin?.name || t.base,      // Bitcoin\r\n                        logo: t.base_coin?.large || \"\",         // Лого\r\n                        price: t.last                          // Цена в USD\r\n                    }));\r\n\r\n                setCryptos(top20);\r\n            })\r\n            .catch(err => console.error(\"Error fetching Kraken top 20:\", err));\r\n    }, []);\r\n\r\n    return cryptos;\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACZM,KAAK,CAAC,mDAAmD,CAAC,CACrDC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACV,IAAI,CAACA,IAAI,CAACC,OAAO,EAAE;;MAEnB;MACA,MAAMC,QAAQ,GAAGF,IAAI,CAACC,OAAO,CAACE,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,KAAK,KAAK,CAAC;;MAE7D;MACA,MAAMC,KAAK,GAAGJ,QAAQ,CACjBK,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,MAAM,GAAGF,CAAC,CAACE,MAAM,CAAC,CACnCC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CACZC,GAAG,CAACR,CAAC;QAAA,IAAAS,YAAA,EAAAC,aAAA;QAAA,OAAK;UACPC,MAAM,EAAE,GAAGX,CAAC,CAACY,IAAI,IAAIZ,CAAC,CAACC,MAAM,EAAE;UAAS;UACxCY,IAAI,EAAE,EAAAJ,YAAA,GAAAT,CAAC,CAACc,SAAS,cAAAL,YAAA,uBAAXA,YAAA,CAAaI,IAAI,KAAIb,CAAC,CAACY,IAAI;UAAO;UACxCG,IAAI,EAAE,EAAAL,aAAA,GAAAV,CAAC,CAACc,SAAS,cAAAJ,aAAA,uBAAXA,aAAA,CAAaM,KAAK,KAAI,EAAE;UAAU;UACxCC,KAAK,EAAEjB,CAAC,CAACkB,IAAI,CAA0B;QAC3C,CAAC;MAAA,CAAC,CAAC;MAEP3B,UAAU,CAACW,KAAK,CAAC;IACrB,CAAC,CAAC,CACDiB,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEF,GAAG,CAAC,CAAC;EAC1E,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO9B,OAAO;AAClB;AAACD,EAAA,CA7BuBD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}