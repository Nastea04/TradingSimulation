{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nexport default function useKrakenPrices(pairs) {\n  _s();\n  const [prices, setPrices] = useState({});\n  const wsRef = useRef(null);\n  useEffect(() => {\n    if (!pairs.length) return;\n    const ws = new WebSocket(\"wss://ws.kraken.com/v2\");\n    wsRef.current = ws;\n    ws.onopen = () => {\n      // Преобразуваме символите в Kraken формат (пример: XBT/USD → XBT/USD)\n      const krakenPairs = pairs.map(p => p.replace(\"-\", \"/\"));\n      ws.send(JSON.stringify({\n        method: \"subscribe\",\n        params: {\n          channel: \"ticker\",\n          symbol: krakenPairs\n        }\n      }));\n    };\n    ws.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n\n        // Пропускаме системни съобщения\n        if (!data.data || !Array.isArray(data.data)) return;\n        data.data.forEach(ticker => {\n          const symbol = ticker.symbol;\n          const price = ticker.price ? parseFloat(ticker.price) : null;\n          if (price) {\n            setPrices(prev => ({\n              ...prev,\n              [symbol]: price\n            }));\n          }\n        });\n      } catch (err) {\n        console.error(\"Parse error:\", err);\n      }\n    };\n    ws.onerror = err => console.error(\"WS error:\", err);\n    ws.onclose = () => console.log(\"WS closed\");\n    return () => {\n      ws.close();\n    };\n  }, [pairs]);\n  return prices;\n}\n_s(useKrakenPrices, \"DYnD9XYRtP7LbfpsQOygvOrrBHo=\");","map":{"version":3,"names":["useEffect","useState","useRef","useKrakenPrices","pairs","_s","prices","setPrices","wsRef","length","ws","WebSocket","current","onopen","krakenPairs","map","p","replace","send","JSON","stringify","method","params","channel","symbol","onmessage","event","data","parse","Array","isArray","forEach","ticker","price","parseFloat","prev","err","console","error","onerror","onclose","log","close"],"sources":["C:/Users/User/Documents/Trading212/TradingSimulation/frontend/src/Cryptos/KrakenApi.js"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\r\n\r\nexport default function useKrakenPrices(pairs) {\r\n    const [prices, setPrices] = useState({});\r\n    const wsRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (!pairs.length) return;\r\n\r\n        const ws = new WebSocket(\"wss://ws.kraken.com/v2\");\r\n        wsRef.current = ws;\r\n\r\n        ws.onopen = () => {\r\n            // Преобразуваме символите в Kraken формат (пример: XBT/USD → XBT/USD)\r\n            const krakenPairs = pairs.map(p => p.replace(\"-\", \"/\"));\r\n\r\n            ws.send(JSON.stringify({\r\n                method: \"subscribe\",\r\n                params: {\r\n                    channel: \"ticker\",\r\n                    symbol: krakenPairs\r\n                }\r\n            }));\r\n        };\r\n\r\n        ws.onmessage = (event) => {\r\n            try {\r\n                const data = JSON.parse(event.data);\r\n\r\n                // Пропускаме системни съобщения\r\n                if (!data.data || !Array.isArray(data.data)) return;\r\n\r\n                data.data.forEach(ticker => {\r\n                    const symbol = ticker.symbol;\r\n                    const price = ticker.price ? parseFloat(ticker.price) : null;\r\n\r\n                    if (price) {\r\n                        setPrices(prev => ({\r\n                            ...prev,\r\n                            [symbol]: price\r\n                        }));\r\n                    }\r\n                });\r\n            } catch (err) {\r\n                console.error(\"Parse error:\", err);\r\n            }\r\n        };\r\n\r\n        ws.onerror = (err) => console.error(\"WS error:\", err);\r\n        ws.onclose = () => console.log(\"WS closed\");\r\n\r\n        return () => {\r\n            ws.close();\r\n        };\r\n    }, [pairs]);\r\n\r\n    return prices;\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAEnD,eAAe,SAASC,eAAeA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC3C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAMO,KAAK,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE1BF,SAAS,CAAC,MAAM;IACZ,IAAI,CAACI,KAAK,CAACK,MAAM,EAAE;IAEnB,MAAMC,EAAE,GAAG,IAAIC,SAAS,CAAC,wBAAwB,CAAC;IAClDH,KAAK,CAACI,OAAO,GAAGF,EAAE;IAElBA,EAAE,CAACG,MAAM,GAAG,MAAM;MACd;MACA,MAAMC,WAAW,GAAGV,KAAK,CAACW,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;MAEvDP,EAAE,CAACQ,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;QACnBC,MAAM,EAAE,WAAW;QACnBC,MAAM,EAAE;UACJC,OAAO,EAAE,QAAQ;UACjBC,MAAM,EAAEV;QACZ;MACJ,CAAC,CAAC,CAAC;IACP,CAAC;IAEDJ,EAAE,CAACe,SAAS,GAAIC,KAAK,IAAK;MACtB,IAAI;QACA,MAAMC,IAAI,GAAGR,IAAI,CAACS,KAAK,CAACF,KAAK,CAACC,IAAI,CAAC;;QAEnC;QACA,IAAI,CAACA,IAAI,CAACA,IAAI,IAAI,CAACE,KAAK,CAACC,OAAO,CAACH,IAAI,CAACA,IAAI,CAAC,EAAE;QAE7CA,IAAI,CAACA,IAAI,CAACI,OAAO,CAACC,MAAM,IAAI;UACxB,MAAMR,MAAM,GAAGQ,MAAM,CAACR,MAAM;UAC5B,MAAMS,KAAK,GAAGD,MAAM,CAACC,KAAK,GAAGC,UAAU,CAACF,MAAM,CAACC,KAAK,CAAC,GAAG,IAAI;UAE5D,IAAIA,KAAK,EAAE;YACP1B,SAAS,CAAC4B,IAAI,KAAK;cACf,GAAGA,IAAI;cACP,CAACX,MAAM,GAAGS;YACd,CAAC,CAAC,CAAC;UACP;QACJ,CAAC,CAAC;MACN,CAAC,CAAC,OAAOG,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEF,GAAG,CAAC;MACtC;IACJ,CAAC;IAED1B,EAAE,CAAC6B,OAAO,GAAIH,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,WAAW,EAAEF,GAAG,CAAC;IACrD1B,EAAE,CAAC8B,OAAO,GAAG,MAAMH,OAAO,CAACI,GAAG,CAAC,WAAW,CAAC;IAE3C,OAAO,MAAM;MACT/B,EAAE,CAACgC,KAAK,CAAC,CAAC;IACd,CAAC;EACL,CAAC,EAAE,CAACtC,KAAK,CAAC,CAAC;EAEX,OAAOE,MAAM;AACjB;AAACD,EAAA,CAvDuBF,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}