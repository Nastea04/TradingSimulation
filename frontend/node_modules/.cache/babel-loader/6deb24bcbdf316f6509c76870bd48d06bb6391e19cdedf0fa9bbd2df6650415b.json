{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Trading212\\\\TradingSimulation\\\\frontend\\\\src\\\\OtherPages\\\\Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport useKrakenPrices from \"../Cryptos/KrakenApi\";\nimport useKrakenPricesRest from \"../Cryptos/KrakenApiBugSolve\";\nimport \"./formSellBuy.css\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Profile = ({\n  onLogout\n}) => {\n  _s();\n  const [user, setUser] = useState(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    return storedUser ? JSON.parse(storedUser) : null;\n  });\n  const [balance, setBalance] = useState(user.balance);\n  const [holdings, setHoldings] = useState([]);\n  const [history, setHistory] = useState([]);\n  //const prices = useKrakenPrices(holdings.map(h => h.cryptoSymbol));\n  const prices = useKrakenPricesRest(holdings.map(h => h.cryptoSymbol));\n  const [isSellOpen, setIsSellOpen] = useState(false);\n  const [selectedCrypto, setSelectedCrypto] = useState(null);\n  const [sellQuantity, setSellQuantity] = useState(\"\");\n  const [totalSell, setTotalSell] = useState(0);\n  const openSellForm = crypto => {\n    setSelectedCrypto(crypto);\n    setIsSellOpen(true);\n  };\n  const closeSellForm = () => {\n    setSelectedCrypto(null);\n    setIsSellOpen(false);\n    setSellQuantity(\"\");\n    setTotalSell(0);\n  };\n  const fetchDashboard = async userId => {\n    try {\n      const res = await fetch(`http://localhost:8080/api/user/dashboard/${userId}`);\n      if (!res.ok) throw new Error(await res.text());\n      const data = await res.json();\n      setUser(data.user);\n      setBalance(data.user.balance);\n      setHoldings(data.holdings);\n      setHistory(data.history);\n    } catch (err) {\n      console.error(\"Error fetching dashboard data:\", err);\n    }\n  };\n  useEffect(() => {\n    const storedUser = JSON.parse(localStorage.getItem(\"user\"));\n    if (!(storedUser !== null && storedUser !== void 0 && storedUser.id)) return;\n    setUser(storedUser);\n    fetchDashboard(storedUser.id); // подаваме ID, за да не взимаме от state\n  }, []); // <- празен масив, само при mount\n\n  const resetProfile = async () => {\n    if (!(user !== null && user !== void 0 && user.id)) return;\n    if (!window.confirm(\"Are you sure you want to reset your profile?\")) return;\n    try {\n      const res = await fetch(`http://localhost:8080/api/users/reset/${user.id}`, {\n        method: \"PUT\"\n      });\n      if (!res.ok) {\n        throw new Error(await res.text());\n      }\n      alert(\"Profile reset successfully\");\n      fetchDashboard();\n    } catch (err) {\n      alert(`Error resetting profile: ${err.message}`);\n    }\n  };\n  const makeSell = () => {\n    const qty = parseFloat(sellQuantity);\n    if (isNaN(qty) || qty <= 0) {\n      alert(\"Enter quantity\");\n      return;\n    }\n    const currentPrice = prices[selectedCrypto.cryptoSymbol];\n    if (!currentPrice) {\n      alert(\"No price available! Try again later.\");\n      return;\n    }\n    const symbol = encodeURIComponent(selectedCrypto.cryptoSymbol);\n    fetch(`http://localhost:8080/api/trade/sell/${user.id}?cryptoSymbol=${symbol}&quantity=${qty}&price=${currentPrice}&cryptoName=${selectedCrypto.cryptoName}`, {\n      method: \"POST\"\n    }).then(async res => {\n      const message = await res.text();\n      if (!res.ok) {\n        throw new Error(message);\n      }\n      return message;\n    }).then(msg => {\n      alert(msg);\n      fetchDashboard();\n      closeSellForm();\n    }).catch(err => {\n      alert(err.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"allProfileInfo\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: user === null || user === void 0 ? void 0 : user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: user === null || user === void 0 ? void 0 : user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balance\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Balance: \", typeof balance === \"number\" ? balance.toFixed(2) : \"0.00\", \"$\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileButtons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetProfile,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profileInfo2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"boxLists\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"headerLists\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Holdings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"infoLists\",\n          children: holdings.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"symbol\",\n                  children: \"Symbol\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"cryptoName\",\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"quantity\",\n                  children: \"Quantity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"sell\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: holdings.map((h, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"symbol\",\n                  children: h.cryptoSymbol\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"cryptoName\",\n                  children: h.cryptoName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"quantity\",\n                  children: typeof h.quantity === \"number\" ? h.quantity.toFixed(2) : \"0.00\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"sell\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => openSellForm(h),\n                    children: \"Sell\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 66\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No holdings yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"boxLists\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"headerLists\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"infoLists\",\n          children: history.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Symbol\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Quantity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: history.map((h, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"symbol\",\n                  children: h.cryptoSymbol\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: h.cryptoName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: h.type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: h.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"time\",\n                  children: h.timePurchase\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No transactions made yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), isSellOpen === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Sell \", selectedCrypto.cryptoName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Symbol: \", selectedCrypto.cryptoSymbol]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Available: \", typeof (selectedCrypto === null || selectedCrypto === void 0 ? void 0 : selectedCrypto.quantity) === \"number\" ? selectedCrypto.quantity.toFixed(2) : \"0.00\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Price: \", prices[selectedCrypto.cryptoSymbol]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total: \", typeof totalSell === \"number\" ? totalSell.toFixed(2) : \"0.00\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"0\",\n            step: \"0.01\",\n            max: selectedCrypto.quantity,\n            placeholder: \"Quantity to sell\",\n            onChange: e => {\n              const value = e.target.value;\n              setSellQuantity(value);\n              const qty = parseFloat(value);\n              const price = prices[selectedCrypto.cryptoSymbol];\n              if (!isNaN(qty) && qty > 0 && price) {\n                setTotalSell(qty * price);\n              } else {\n                setTotalSell(0);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"confirm\",\n              onClick: () => makeSell(),\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel\",\n              onClick: () => closeSellForm(),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n_s(Profile, \"15hdiM29XrhxZojjbgxzH7okv+k=\", false, function () {\n  return [useKrakenPricesRest];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useKrakenPrices","useKrakenPricesRest","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","onLogout","_s","user","setUser","storedUser","localStorage","getItem","JSON","parse","balance","setBalance","holdings","setHoldings","history","setHistory","prices","map","h","cryptoSymbol","isSellOpen","setIsSellOpen","selectedCrypto","setSelectedCrypto","sellQuantity","setSellQuantity","totalSell","setTotalSell","openSellForm","crypto","closeSellForm","fetchDashboard","userId","res","fetch","ok","Error","text","data","json","err","console","error","id","resetProfile","window","confirm","method","alert","message","makeSell","qty","parseFloat","isNaN","currentPrice","symbol","encodeURIComponent","cryptoName","then","msg","catch","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","email","toFixed","onClick","length","index","quantity","type","timePurchase","min","step","max","placeholder","onChange","e","value","target","price","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/Trading212/TradingSimulation/frontend/src/OtherPages/Profile.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport useKrakenPrices from \"../Cryptos/KrakenApi\";\r\nimport useKrakenPricesRest from \"../Cryptos/KrakenApiBugSolve\";\r\nimport \"./formSellBuy.css\"\r\nimport \"./style.css\";\r\n\r\nconst Profile = ({ onLogout }) => {\r\n    const [user, setUser] = useState(() => {\r\n        const storedUser = localStorage.getItem(\"user\");\r\n        return storedUser ? JSON.parse(storedUser) : null;\r\n    });\r\n    const [balance, setBalance] = useState(user.balance);\r\n    const [holdings, setHoldings] = useState([]);\r\n    const [history, setHistory] = useState([]);\r\n    //const prices = useKrakenPrices(holdings.map(h => h.cryptoSymbol));\r\n    const prices = useKrakenPricesRest(holdings.map(h => h.cryptoSymbol));\r\n    const [isSellOpen, setIsSellOpen] = useState(false);\r\n    const [selectedCrypto, setSelectedCrypto] = useState(null);\r\n    const [sellQuantity, setSellQuantity] = useState(\"\");\r\n    const [totalSell, setTotalSell] = useState(0);\r\n\r\n    const openSellForm = (crypto) => {\r\n        setSelectedCrypto(crypto);\r\n        setIsSellOpen(true);\r\n    }\r\n    const closeSellForm = () => {\r\n        setSelectedCrypto(null);\r\n        setIsSellOpen(false);\r\n        setSellQuantity(\"\");\r\n        setTotalSell(0);\r\n    }\r\n\r\n    const fetchDashboard = async (userId) => {\r\n        try {\r\n            const res = await fetch(`http://localhost:8080/api/user/dashboard/${userId}`);\r\n            if (!res.ok) throw new Error(await res.text());\r\n\r\n            const data = await res.json();\r\n            setUser(data.user);\r\n            setBalance(data.user.balance);\r\n            setHoldings(data.holdings);\r\n            setHistory(data.history);\r\n        } catch (err) {\r\n            console.error(\"Error fetching dashboard data:\", err);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n    const storedUser = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (!storedUser?.id) return;\r\n\r\n    setUser(storedUser);\r\n    fetchDashboard(storedUser.id); // подаваме ID, за да не взимаме от state\r\n}, []); // <- празен масив, само при mount\r\n\r\n\r\n    const resetProfile = async () => {\r\n        if (!user?.id) return;\r\n\r\n        if (!window.confirm(\"Are you sure you want to reset your profile?\")) return;\r\n\r\n        try {\r\n            const res = await fetch(`http://localhost:8080/api/users/reset/${user.id}`, {\r\n                method: \"PUT\"\r\n            });\r\n\r\n            if (!res.ok) {\r\n                throw new Error(await res.text());\r\n            }\r\n\r\n            alert(\"Profile reset successfully\");\r\n            fetchDashboard();\r\n        } catch (err) {\r\n            alert(`Error resetting profile: ${err.message}`);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    const makeSell = () => {\r\n        const qty = parseFloat(sellQuantity);\r\n        if (isNaN(qty) || qty <= 0) {\r\n            alert(\"Enter quantity\");\r\n            return;\r\n        }\r\n\r\n        const currentPrice = prices[selectedCrypto.cryptoSymbol];\r\n        if (!currentPrice) {\r\n            alert(\"No price available! Try again later.\");\r\n            return;\r\n        }\r\n\r\n        const symbol = encodeURIComponent(selectedCrypto.cryptoSymbol);\r\n        fetch(`http://localhost:8080/api/trade/sell/${user.id}?cryptoSymbol=${symbol}&quantity=${qty}&price=${currentPrice}&cryptoName=${selectedCrypto.cryptoName}`, {\r\n            method: \"POST\"\r\n        })\r\n\r\n            .then(async (res) => {\r\n                const message = await res.text();\r\n                if (!res.ok) {\r\n                    throw new Error(message);\r\n                }\r\n                return message;\r\n            })\r\n            .then((msg) => {\r\n                alert(msg);\r\n                fetchDashboard();\r\n                closeSellForm();\r\n            })\r\n            .catch((err) => {\r\n                alert(err.message);\r\n            });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"allProfileInfo\">\r\n            <div className=\"profile\">\r\n                <div className=\"profileInfo\">\r\n                    <h1>{user?.name}</h1>\r\n                    <p>{user?.email}</p>\r\n                </div>\r\n                <div className=\"balance\">\r\n                    <h1>Balance: {typeof balance === \"number\" ? balance.toFixed(2) : \"0.00\"}$</h1>\r\n                </div>\r\n\r\n                <div className=\"profileButtons\">\r\n                    <button onClick={resetProfile}>Reset</button>\r\n                    <button onClick={onLogout}>Logout</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"profileInfo2\">\r\n                <div className=\"boxLists\">\r\n                    <div className=\"headerLists\"><h1>Holdings</h1></div>\r\n                    <div className=\"infoLists\">\r\n                        {holdings.length > 0 ?\r\n                            <table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className=\"symbol\">Symbol</th>\r\n                                        <th className=\"cryptoName\">Name</th>\r\n                                        <th className=\"quantity\">Quantity</th>\r\n                                        <th className=\"sell\"></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {holdings.map((h, index) => (\r\n                                        <tr key={index}>\r\n                                            <td className=\"symbol\">{h.cryptoSymbol}</td>\r\n                                            <td className=\"cryptoName\">{h.cryptoName}</td>\r\n                                            <td className=\"quantity\">\r\n                                                {typeof h.quantity === \"number\" ? h.quantity.toFixed(2) : \"0.00\"}\r\n                                            </td>\r\n\r\n                                            <td className=\"sell\"><button onClick={() => openSellForm(h)}>Sell</button></td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                            :\r\n                            <p>No holdings yet</p>}\r\n                    </div>\r\n                </div>\r\n                <div className=\"boxLists\">\r\n                    <div className=\"headerLists\"><h1>History</h1></div>\r\n                    <div className=\"infoLists\">\r\n                        {history.length > 0 ? (\r\n                            <table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Symbol</th>\r\n                                        <th>Name</th>\r\n                                        <th>Type</th>\r\n                                        <th>Quantity</th>\r\n                                        <th>Time</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {history.map((h, index) => (\r\n                                        <tr key={index}>\r\n                                            <td className=\"symbol\">{h.cryptoSymbol}</td>\r\n                                            <td>{h.cryptoName}</td>\r\n                                            <td>{h.type}</td>\r\n                                            <td>{h.quantity}</td>\r\n                                            <td className=\"time\">{h.timePurchase}</td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>No transactions made yet</p>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                {isSellOpen === true ?\r\n\r\n                    <div className=\"overlay\">\r\n                        <div className=\"form-container\">\r\n                            <h1>Sell {selectedCrypto.cryptoName}</h1>\r\n                            <p>Symbol: {selectedCrypto.cryptoSymbol}</p>\r\n                            <p>Available: {typeof selectedCrypto?.quantity === \"number\" ? selectedCrypto.quantity.toFixed(2) : \"0.00\"}</p>\r\n                            <p>Price: {prices[selectedCrypto.cryptoSymbol]}</p>\r\n                            <p>Total: {typeof totalSell === \"number\" ? totalSell.toFixed(2) : \"0.00\"}</p>\r\n\r\n                            <input type=\"number\" min=\"0\" step=\"0.01\" max={selectedCrypto.quantity}\r\n                                placeholder=\"Quantity to sell\" onChange={(e) => {\r\n                                    const value = e.target.value;\r\n                                    setSellQuantity(value);\r\n\r\n                                    const qty = parseFloat(value);\r\n                                    const price = prices[selectedCrypto.cryptoSymbol];\r\n                                    if (!isNaN(qty) && qty > 0 && price) {\r\n                                        setTotalSell(qty * price);\r\n                                    } else {\r\n                                        setTotalSell(0);\r\n                                    }\r\n                                }} />\r\n\r\n                            <div className=\"buttons\">\r\n                                <button className=\"confirm\" onClick={() => makeSell()}>Confirm</button>\r\n                                <button className=\"cancel\" onClick={() => closeSellForm()}>Cancel</button>\r\n                            </div>\r\n                        </div>\r\n                    </div> : <></>};\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Profile"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}