{"ast":null,"code":"var _s = $RefreshSig$();\nexport default function useKrakenPrices(pairs) {\n  _s();\n  const [prices, setPrices] = useState({});\n  useEffect(() => {\n    if (!pairs || pairs.length === 0) return;\n    const ws = new WebSocket(\"wss://ws.kraken.com/v2\");\n    ws.onopen = () => {\n      console.log(\"✅ Connected to Kraken v2\");\n      ws.send(JSON.stringify({\n        event: \"subscribe\",\n        pair: pairs,\n        subscription: {\n          name: \"ticker\"\n        }\n      }));\n    };\n    ws.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n        if (Array.isArray(data) && data[2] === \"ticker\") {\n          const pair = data[3];\n          const price = parseFloat(data[1].c[0]).toFixed(2);\n          setPrices(prev => ({\n            ...prev,\n            [pair]: price\n          }));\n        }\n      } catch (err) {\n        console.error(\"❌ Error parsing Kraken WS message:\", err);\n      }\n    };\n    return () => ws.close();\n  }, [pairs]);\n  return prices;\n}\n_s(useKrakenPrices, \"AyDZng7+aEBipOGwqaguTBzobZI=\");","map":{"version":3,"names":["useKrakenPrices","pairs","_s","prices","setPrices","useState","useEffect","length","ws","WebSocket","onopen","console","log","send","JSON","stringify","event","pair","subscription","name","onmessage","data","parse","Array","isArray","price","parseFloat","c","toFixed","prev","err","error","close"],"sources":["C:/Users/User/Documents/Trading212/TradingSimulation/frontend/src/Cryptos/KrakenApi.js"],"sourcesContent":["export default function useKrakenPrices(pairs) {\r\n    const [prices, setPrices] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (!pairs || pairs.length === 0) return;\r\n\r\n        const ws = new WebSocket(\"wss://ws.kraken.com/v2\");\r\n\r\n        ws.onopen = () => {\r\n            console.log(\"✅ Connected to Kraken v2\");\r\n\r\n            ws.send(JSON.stringify({\r\n                event: \"subscribe\",\r\n                pair: pairs,\r\n                subscription: { name: \"ticker\" }\r\n            }));\r\n        };\r\n\r\n        ws.onmessage = (event) => {\r\n            try {\r\n                const data = JSON.parse(event.data);\r\n\r\n                if (Array.isArray(data) && data[2] === \"ticker\") {\r\n                    const pair = data[3];\r\n                    const price = parseFloat(data[1].c[0]).toFixed(2);\r\n\r\n                    setPrices(prev => ({\r\n                        ...prev,\r\n                        [pair]: price\r\n                    }));\r\n                }\r\n            } catch (err) {\r\n                console.error(\"❌ Error parsing Kraken WS message:\", err);\r\n            }\r\n        };\r\n\r\n        return () => ws.close();\r\n    }, [pairs]);\r\n\r\n    return prices;\r\n}\r\n"],"mappings":";AAAA,eAAe,SAASA,eAAeA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC3C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ,IAAI,CAACL,KAAK,IAAIA,KAAK,CAACM,MAAM,KAAK,CAAC,EAAE;IAElC,MAAMC,EAAE,GAAG,IAAIC,SAAS,CAAC,wBAAwB,CAAC;IAElDD,EAAE,CAACE,MAAM,GAAG,MAAM;MACdC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MAEvCJ,EAAE,CAACK,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;QACnBC,KAAK,EAAE,WAAW;QAClBC,IAAI,EAAEhB,KAAK;QACXiB,YAAY,EAAE;UAAEC,IAAI,EAAE;QAAS;MACnC,CAAC,CAAC,CAAC;IACP,CAAC;IAEDX,EAAE,CAACY,SAAS,GAAIJ,KAAK,IAAK;MACtB,IAAI;QACA,MAAMK,IAAI,GAAGP,IAAI,CAACQ,KAAK,CAACN,KAAK,CAACK,IAAI,CAAC;QAEnC,IAAIE,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;UAC7C,MAAMJ,IAAI,GAAGI,IAAI,CAAC,CAAC,CAAC;UACpB,MAAMI,KAAK,GAAGC,UAAU,CAACL,IAAI,CAAC,CAAC,CAAC,CAACM,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;UAEjDxB,SAAS,CAACyB,IAAI,KAAK;YACf,GAAGA,IAAI;YACP,CAACZ,IAAI,GAAGQ;UACZ,CAAC,CAAC,CAAC;QACP;MACJ,CAAC,CAAC,OAAOK,GAAG,EAAE;QACVnB,OAAO,CAACoB,KAAK,CAAC,oCAAoC,EAAED,GAAG,CAAC;MAC5D;IACJ,CAAC;IAED,OAAO,MAAMtB,EAAE,CAACwB,KAAK,CAAC,CAAC;EAC3B,CAAC,EAAE,CAAC/B,KAAK,CAAC,CAAC;EAEX,OAAOE,MAAM;AACjB;AAACD,EAAA,CAxCuBF,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}