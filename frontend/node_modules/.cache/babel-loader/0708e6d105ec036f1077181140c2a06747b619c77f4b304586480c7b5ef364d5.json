{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nexport default function useCryptoList() {\n  _s();\n  const [cryptos, setCryptos] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8080/api/trade/cryptos\").then(res => res.json()).then(data => {\n      const mapped = data.map(c => {\n        // Пример: \"XBT/USD\" → \"BTC\"\n        let ticker = c.symbol.split(\"/\")[0].replace(\"XBT\", \"BTC\");\n        let logoName = c.name.toLowerCase().replace(/\\s+/g, \"-\");\n        return {\n          ...c,\n          logo: `https://cryptologos.cc/logos/${logoName}-${ticker.toLowerCase()}-logo.svg`\n        };\n      });\n      setCryptos(mapped);\n    }).catch(err => console.error(\"Error fetching cryptos:\", err));\n  }, []);\n  return cryptos;\n}\n_s(useCryptoList, \"EQJvBb3StcVAt/RsPLmS7z4HOdE=\");","map":{"version":3,"names":["useEffect","useState","useCryptoList","_s","cryptos","setCryptos","fetch","then","res","json","data","mapped","map","c","ticker","symbol","split","replace","logoName","name","toLowerCase","logo","catch","err","console","error"],"sources":["C:/Users/User/Documents/Trading212/TradingSimulation/frontend/src/Cryptos/TopCryptos.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport default function useCryptoList() {\r\n    const [cryptos, setCryptos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:8080/api/trade/cryptos\")\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                const mapped = data.map(c => {\r\n                    // Пример: \"XBT/USD\" → \"BTC\"\r\n                    let ticker = c.symbol.split(\"/\")[0].replace(\"XBT\", \"BTC\");\r\n                    let logoName = c.name.toLowerCase().replace(/\\s+/g, \"-\");\r\n\r\n                    return {\r\n                        ...c,\r\n                        logo: `https://cryptologos.cc/logos/${logoName}-${ticker.toLowerCase()}-logo.svg`\r\n                    };\r\n                });\r\n                setCryptos(mapped);\r\n            })\r\n            .catch(err => console.error(\"Error fetching cryptos:\", err));\r\n    }, []);\r\n\r\n    return cryptos;\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACZM,KAAK,CAAC,yCAAyC,CAAC,CAC3CC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACV,MAAMC,MAAM,GAAGD,IAAI,CAACE,GAAG,CAACC,CAAC,IAAI;QACzB;QACA,IAAIC,MAAM,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC;QACzD,IAAIC,QAAQ,GAAGL,CAAC,CAACM,IAAI,CAACC,WAAW,CAAC,CAAC,CAACH,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;QAExD,OAAO;UACH,GAAGJ,CAAC;UACJQ,IAAI,EAAE,gCAAgCH,QAAQ,IAAIJ,MAAM,CAACM,WAAW,CAAC,CAAC;QAC1E,CAAC;MACL,CAAC,CAAC;MACFf,UAAU,CAACM,MAAM,CAAC;IACtB,CAAC,CAAC,CACDW,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC,CAAC;EACpE,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOnB,OAAO;AAClB;AAACD,EAAA,CAvBuBD,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}