{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Trading212\\\\TradingSimulation\\\\frontend\\\\src\\\\OtherPages\\\\CryptoTable.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport useKrakenPricesRest from \"../Cryptos/KrakenApiBugSolve\";\nimport \"./styleTable.css\";\nimport \"./formSellBuy.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CryptoTable = () => {\n  _s();\n  const [cryptos, setCryptos] = useState([]);\n  const [isBuyOpen, setIsBuyOpen] = useState(false);\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const [balance, setBalance] = useState((user === null || user === void 0 ? void 0 : user.balance) || 0);\n  const [selectedCrypto, setSelectedCrypto] = useState(null);\n  const [buyQuantity, setBuyQuantity] = useState(\"\");\n  const [totalBuy, setTotalBuy] = useState(0);\n  const prices = useKrakenPricesRest(cryptos.map(c => c.symbol));\n  const openBuyForm = crypto => {\n    setSelectedCrypto(crypto);\n    setIsBuyOpen(true);\n    setBuyQuantity(\"\");\n    setTotalBuy(0);\n  };\n  const closeBuyForm = () => {\n    setSelectedCrypto(null);\n    setIsBuyOpen(false);\n    setBuyQuantity(\"\");\n    setTotalBuy(0);\n  };\n  const fetchBalance = () => {\n    if (!(user !== null && user !== void 0 && user.id)) return;\n    fetch(`http://localhost:8080/api/users/get/${user.id}`).then(res => res.json()).then(data => setBalance(data.balance)).catch(err => console.error(\"Error fetching balance:\", err));\n  };\n  const fetchData = () => {\n    if (!(user !== null && user !== void 0 && user.id)) return;\n    fetchBalance();\n    fetch(`http://localhost:8080/api/cryptos`).then(res => res.json()).then(data => setCryptos(data)).catch(err => console.error(\"Error fetching cryptos:\", err));\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const makeBuy = () => {\n    const qty = parseFloat(buyQuantity);\n    if (isNaN(qty) || qty <= 0) {\n      alert(\"Enter quantity\");\n      return;\n    }\n    const price = prices[selectedCrypto.symbol];\n    if (!price) {\n      alert(\"No price available! Try again later.\");\n      return;\n    }\n    const symbol = encodeURIComponent(selectedCrypto.symbol);\n    const name = encodeURIComponent(selectedCrypto.name);\n    fetch(`http://localhost:8080/api/trade/buy/${user.id}?cryptoSymbol=${symbol}&quantity=${qty}&price=${prices[selectedCrypto.symbol]}&cryptoName=${name}`, {\n      method: \"POST\"\n    }).then(async res => {\n      const message = await res.text();\n      if (!res.ok) throw new Error(message);\n      return message;\n    }).then(msg => {\n      alert(msg);\n      fetchData();\n      closeBuyForm();\n    }).catch(err => {\n      alert(err.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"id\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"logo\",\n            children: \"Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"symbol\",\n            children: \"Symbol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"price\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"buy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: cryptos.map(coin => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"id\",\n            children: coin.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"logo\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: coin.url,\n              alt: coin.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"symbol\",\n            children: coin.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"name\",\n            children: coin.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"price\",\n            children: prices[coin.symbol] ? `$${prices[coin.symbol]}` : \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this), user && /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"buy\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => openBuyForm(coin),\n              children: \"Buy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 33\n          }, this)]\n        }, coin.symbol, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), isBuyOpen && selectedCrypto && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Buy \", selectedCrypto.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Symbol: \", selectedCrypto.symbol]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Balance: $\", balance.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: \", prices[selectedCrypto.symbol] ? `$${prices[selectedCrypto.symbol]}` : \"Loading...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total: $\", totalBuy.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0\",\n          step: \"0.01\",\n          placeholder: \"Quantity to buy\",\n          value: buyQuantity,\n          onChange: e => {\n            const value = e.target.value;\n            setBuyQuantity(value);\n            const qty = parseFloat(value);\n            const price = prices[selectedCrypto.symbol];\n            if (!isNaN(qty) && qty > 0 && price) {\n              setTotalBuy(qty * price);\n            } else {\n              setTotalBuy(0);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"confirm\",\n            onClick: makeBuy,\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel\",\n            onClick: closeBuyForm,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(CryptoTable, \"9ugg/1q/dLS6r3ABiGMdoh+vz6I=\", false, function () {\n  return [useKrakenPricesRest];\n});\n_c = CryptoTable;\nexport default CryptoTable;\nvar _c;\n$RefreshReg$(_c, \"CryptoTable\");","map":{"version":3,"names":["useEffect","useState","useKrakenPricesRest","jsxDEV","_jsxDEV","CryptoTable","_s","cryptos","setCryptos","isBuyOpen","setIsBuyOpen","user","JSON","parse","localStorage","getItem","balance","setBalance","selectedCrypto","setSelectedCrypto","buyQuantity","setBuyQuantity","totalBuy","setTotalBuy","prices","map","c","symbol","openBuyForm","crypto","closeBuyForm","fetchBalance","id","fetch","then","res","json","data","catch","err","console","error","fetchData","makeBuy","qty","parseFloat","isNaN","alert","price","encodeURIComponent","name","method","message","text","ok","Error","msg","children","className","fileName","_jsxFileName","lineNumber","columnNumber","coin","src","url","alt","onClick","toFixed","type","min","step","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/Trading212/TradingSimulation/frontend/src/OtherPages/CryptoTable.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport useKrakenPricesRest from \"../Cryptos/KrakenApiBugSolve\";\r\nimport \"./styleTable.css\";\r\nimport \"./formSellBuy.css\";\r\n\r\nconst CryptoTable = () => {\r\n    const [cryptos, setCryptos] = useState([]);\r\n    const [isBuyOpen, setIsBuyOpen] = useState(false);\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    const [balance, setBalance] = useState(user?.balance || 0);\r\n    const [selectedCrypto, setSelectedCrypto] = useState(null);\r\n    const [buyQuantity, setBuyQuantity] = useState(\"\");\r\n    const [totalBuy, setTotalBuy] = useState(0);\r\n\r\n    const prices = useKrakenPricesRest(cryptos.map(c => c.symbol));\r\n\r\n    const openBuyForm = (crypto) => {\r\n        setSelectedCrypto(crypto);\r\n        setIsBuyOpen(true);\r\n        setBuyQuantity(\"\");\r\n        setTotalBuy(0);\r\n    };\r\n\r\n    const closeBuyForm = () => {\r\n        setSelectedCrypto(null);\r\n        setIsBuyOpen(false);\r\n        setBuyQuantity(\"\");\r\n        setTotalBuy(0);\r\n    };\r\n\r\n    const fetchBalance = () => {\r\n        if (!user?.id) return;\r\n        fetch(`http://localhost:8080/api/users/get/${user.id}`)\r\n            .then(res => res.json())\r\n            .then(data => setBalance(data.balance))\r\n            .catch(err => console.error(\"Error fetching balance:\", err));\r\n    };\r\n\r\n    const fetchData = () => {\r\n        if (!user?.id) return;\r\n        fetchBalance();\r\n        fetch(`http://localhost:8080/api/cryptos`)\r\n            .then(res => res.json())\r\n            .then(data => setCryptos(data))\r\n            .catch(err => console.error(\"Error fetching cryptos:\", err));\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    const makeBuy = () => {\r\n        const qty = parseFloat(buyQuantity);\r\n        if (isNaN(qty) || qty <= 0) {\r\n            alert(\"Enter quantity\");\r\n            return;\r\n        }\r\n\r\n        const price = prices[selectedCrypto.symbol];\r\n        if (!price) {\r\n            alert(\"No price available! Try again later.\");\r\n            return;\r\n        }\r\n\r\n        const symbol = encodeURIComponent(selectedCrypto.symbol);\r\n        const name = encodeURIComponent(selectedCrypto.name);\r\n\r\n        fetch(`http://localhost:8080/api/trade/buy/${user.id}?cryptoSymbol=${symbol}&quantity=${qty}&price=${prices[selectedCrypto.symbol]}&cryptoName=${name}`, {\r\n            method: \"POST\"\r\n        })\r\n\r\n            .then(async (res) => {\r\n                const message = await res.text();\r\n                if (!res.ok) throw new Error(message);\r\n                return message;\r\n            })\r\n            .then((msg) => {\r\n                alert(msg);\r\n                fetchData();\r\n                closeBuyForm();\r\n            })\r\n            .catch((err) => {\r\n                alert(err.message);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"id\">#</th>\r\n                        <th className=\"logo\">Logo</th>\r\n                        <th className=\"symbol\">Symbol</th>\r\n                        <th className=\"name\">Name</th>\r\n                        <th className=\"price\">Price</th>\r\n                        <th className=\"buy\"></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {cryptos.map(coin => (\r\n                        <tr key={coin.symbol}>\r\n                            <td className=\"id\">{coin.id}</td>\r\n                            <td className=\"logo\"><img src={coin.url} alt={coin.name} /></td>\r\n                            <td className=\"symbol\">{coin.symbol}</td>\r\n                            <td className=\"name\">{coin.name}</td>\r\n                            <td className=\"price\">\r\n                                {prices[coin.symbol] ? `$${prices[coin.symbol]}` : \"Loading...\"}\r\n                            </td>\r\n                            {user && (\r\n                                <td className=\"buy\">\r\n                                    <button onClick={() => openBuyForm(coin)}>Buy</button>\r\n                                </td>\r\n                            )}\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            {isBuyOpen && selectedCrypto && (\r\n                <div className=\"overlay\">\r\n                    <div className=\"form-container\">\r\n                        <h1>Buy {selectedCrypto.name}</h1>\r\n                        <p>Symbol: {selectedCrypto.symbol}</p>\r\n                        <p>Balance: ${balance.toFixed(2)}</p>\r\n                        <p>Price: {prices[selectedCrypto.symbol] ? `$${prices[selectedCrypto.symbol]}` : \"Loading...\"}</p>\r\n                        <p>Total: ${totalBuy.toFixed(2)}</p>\r\n                        <input\r\n                            type=\"number\"\r\n                            min=\"0\"\r\n                            step=\"0.01\"\r\n                            placeholder=\"Quantity to buy\"\r\n                            value={buyQuantity}\r\n                            onChange={(e) => {\r\n                                const value = e.target.value;\r\n                                setBuyQuantity(value);\r\n\r\n                                const qty = parseFloat(value);\r\n                                const price = prices[selectedCrypto.symbol];\r\n                                if (!isNaN(qty) && qty > 0 && price) {\r\n                                    setTotalBuy(qty * price);\r\n                                } else {\r\n                                    setTotalBuy(0);\r\n                                }\r\n                            }}\r\n                        />\r\n                        <div className=\"buttons\">\r\n                            <button className=\"confirm\" onClick={makeBuy}>Confirm</button>\r\n                            <button className=\"cancel\" onClick={closeBuyForm}>Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CryptoTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}