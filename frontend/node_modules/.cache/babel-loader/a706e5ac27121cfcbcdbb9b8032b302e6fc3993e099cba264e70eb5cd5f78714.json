{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nexport default function useKrakenPrices(pairs) {\n  _s();\n  const [prices, setPrices] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [status, setStatus] = useState(\"disconnected\"); // connected | disconnected | connecting\n  const wsRef = useRef(null);\n  useEffect(() => {\n    if (!pairs || pairs.length === 0) return; // чакаме да има pairs\n\n    let isActive = true;\n    setLoading(true);\n    setStatus(\"connecting\");\n\n    // Затваряме стара връзка ако има\n    if (wsRef.current) {\n      wsRef.current.close();\n    }\n    const ws = new WebSocket(\"wss://ws.kraken.com/v2\");\n    wsRef.current = ws;\n    ws.onopen = () => {\n      if (!isActive) return;\n      setStatus(\"connected\");\n      ws.send(JSON.stringify({\n        method: \"subscribe\",\n        params: {\n          channel: \"ticker\",\n          symbol: pairs\n        }\n      }));\n    };\n    ws.onmessage = event => {\n      if (!isActive) return;\n      try {\n        const msg = JSON.parse(event.data);\n        if (msg.channel === \"ticker\" && (msg.type === \"snapshot\" || msg.type === \"update\")) {\n          setLoading(false);\n          msg.data.forEach(ticker => {\n            setPrices(prev => ({\n              ...prev,\n              [ticker.symbol]: ticker.last\n            }));\n          });\n        }\n      } catch (err) {\n        console.error(\"WS parse error:\", err);\n      }\n    };\n    ws.onclose = () => {\n      if (!isActive) return;\n      setStatus(\"disconnected\");\n    };\n    ws.onerror = () => {\n      if (!isActive) return;\n      setStatus(\"disconnected\");\n    };\n    return () => {\n      isActive = false;\n      if (ws && ws.readyState === WebSocket.OPEN) {\n        ws.close();\n      }\n    };\n  }, [pairs]);\n  return {\n    prices,\n    loading,\n    status\n  };\n}\n_s(useKrakenPrices, \"V5YP5Kcpp1YxTV27poIhGoGv3cY=\");","map":{"version":3,"names":["useEffect","useState","useRef","useKrakenPrices","pairs","_s","prices","setPrices","loading","setLoading","status","setStatus","wsRef","length","isActive","current","close","ws","WebSocket","onopen","send","JSON","stringify","method","params","channel","symbol","onmessage","event","msg","parse","data","type","forEach","ticker","prev","last","err","console","error","onclose","onerror","readyState","OPEN"],"sources":["C:/Users/User/Documents/Trading212/TradingSimulation/frontend/src/Cryptos/KrakenApi.js"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\r\n\r\nexport default function useKrakenPrices(pairs) {\r\n    const [prices, setPrices] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    const [status, setStatus] = useState(\"disconnected\"); // connected | disconnected | connecting\r\n    const wsRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (!pairs || pairs.length === 0) return; // чакаме да има pairs\r\n\r\n        let isActive = true;\r\n        setLoading(true);\r\n        setStatus(\"connecting\");\r\n\r\n        // Затваряме стара връзка ако има\r\n        if (wsRef.current) {\r\n            wsRef.current.close();\r\n        }\r\n\r\n        const ws = new WebSocket(\"wss://ws.kraken.com/v2\");\r\n        wsRef.current = ws;\r\n\r\n        ws.onopen = () => {\r\n            if (!isActive) return;\r\n            setStatus(\"connected\");\r\n            ws.send(JSON.stringify({\r\n                method: \"subscribe\",\r\n                params: {\r\n                    channel: \"ticker\",\r\n                    symbol: pairs\r\n                }\r\n            }));\r\n        };\r\n\r\n        ws.onmessage = (event) => {\r\n            if (!isActive) return;\r\n\r\n            try {\r\n                const msg = JSON.parse(event.data);\r\n\r\n                if (msg.channel === \"ticker\" && (msg.type === \"snapshot\" || msg.type === \"update\")) {\r\n                    setLoading(false);\r\n                    msg.data.forEach(ticker => {\r\n                        setPrices(prev => ({\r\n                            ...prev,\r\n                            [ticker.symbol]: ticker.last\r\n                        }));\r\n                    });\r\n                }\r\n            } catch (err) {\r\n                console.error(\"WS parse error:\", err);\r\n            }\r\n        };\r\n\r\n        ws.onclose = () => {\r\n            if (!isActive) return;\r\n            setStatus(\"disconnected\");\r\n        };\r\n\r\n        ws.onerror = () => {\r\n            if (!isActive) return;\r\n            setStatus(\"disconnected\");\r\n        };\r\n\r\n        return () => {\r\n            isActive = false;\r\n            if (ws && ws.readyState === WebSocket.OPEN) {\r\n                ws.close();\r\n            }\r\n        };\r\n    }, [pairs]);\r\n\r\n    return { prices, loading, status };\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAEnD,eAAe,SAASC,eAAeA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC3C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC;EACtD,MAAMW,KAAK,GAAGV,MAAM,CAAC,IAAI,CAAC;EAE1BF,SAAS,CAAC,MAAM;IACZ,IAAI,CAACI,KAAK,IAAIA,KAAK,CAACS,MAAM,KAAK,CAAC,EAAE,OAAO,CAAC;;IAE1C,IAAIC,QAAQ,GAAG,IAAI;IACnBL,UAAU,CAAC,IAAI,CAAC;IAChBE,SAAS,CAAC,YAAY,CAAC;;IAEvB;IACA,IAAIC,KAAK,CAACG,OAAO,EAAE;MACfH,KAAK,CAACG,OAAO,CAACC,KAAK,CAAC,CAAC;IACzB;IAEA,MAAMC,EAAE,GAAG,IAAIC,SAAS,CAAC,wBAAwB,CAAC;IAClDN,KAAK,CAACG,OAAO,GAAGE,EAAE;IAElBA,EAAE,CAACE,MAAM,GAAG,MAAM;MACd,IAAI,CAACL,QAAQ,EAAE;MACfH,SAAS,CAAC,WAAW,CAAC;MACtBM,EAAE,CAACG,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;QACnBC,MAAM,EAAE,WAAW;QACnBC,MAAM,EAAE;UACJC,OAAO,EAAE,QAAQ;UACjBC,MAAM,EAAEtB;QACZ;MACJ,CAAC,CAAC,CAAC;IACP,CAAC;IAEDa,EAAE,CAACU,SAAS,GAAIC,KAAK,IAAK;MACtB,IAAI,CAACd,QAAQ,EAAE;MAEf,IAAI;QACA,MAAMe,GAAG,GAAGR,IAAI,CAACS,KAAK,CAACF,KAAK,CAACG,IAAI,CAAC;QAElC,IAAIF,GAAG,CAACJ,OAAO,KAAK,QAAQ,KAAKI,GAAG,CAACG,IAAI,KAAK,UAAU,IAAIH,GAAG,CAACG,IAAI,KAAK,QAAQ,CAAC,EAAE;UAChFvB,UAAU,CAAC,KAAK,CAAC;UACjBoB,GAAG,CAACE,IAAI,CAACE,OAAO,CAACC,MAAM,IAAI;YACvB3B,SAAS,CAAC4B,IAAI,KAAK;cACf,GAAGA,IAAI;cACP,CAACD,MAAM,CAACR,MAAM,GAAGQ,MAAM,CAACE;YAC5B,CAAC,CAAC,CAAC;UACP,CAAC,CAAC;QACN;MACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,iBAAiB,EAAEF,GAAG,CAAC;MACzC;IACJ,CAAC;IAEDpB,EAAE,CAACuB,OAAO,GAAG,MAAM;MACf,IAAI,CAAC1B,QAAQ,EAAE;MACfH,SAAS,CAAC,cAAc,CAAC;IAC7B,CAAC;IAEDM,EAAE,CAACwB,OAAO,GAAG,MAAM;MACf,IAAI,CAAC3B,QAAQ,EAAE;MACfH,SAAS,CAAC,cAAc,CAAC;IAC7B,CAAC;IAED,OAAO,MAAM;MACTG,QAAQ,GAAG,KAAK;MAChB,IAAIG,EAAE,IAAIA,EAAE,CAACyB,UAAU,KAAKxB,SAAS,CAACyB,IAAI,EAAE;QACxC1B,EAAE,CAACD,KAAK,CAAC,CAAC;MACd;IACJ,CAAC;EACL,CAAC,EAAE,CAACZ,KAAK,CAAC,CAAC;EAEX,OAAO;IAAEE,MAAM;IAAEE,OAAO;IAAEE;EAAO,CAAC;AACtC;AAACL,EAAA,CAxEuBF,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}